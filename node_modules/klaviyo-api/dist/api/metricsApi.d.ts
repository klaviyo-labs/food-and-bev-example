/**
 * Klaviyo API
 * The Klaviyo REST API. Please visit https://developers.klaviyo.com for more details.
 *
 * Contact: developers@klaviyo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { AxiosResponse } from "axios";
import { CustomMetricCreateQuery } from '../model/customMetricCreateQuery';
import { CustomMetricPartialUpdateQuery } from '../model/customMetricPartialUpdateQuery';
import { GetCustomMetricMetricsRelationshipsResponseCollection } from '../model/getCustomMetricMetricsRelationshipsResponseCollection';
import { GetCustomMetricResponseCollectionCompoundDocument } from '../model/getCustomMetricResponseCollectionCompoundDocument';
import { GetCustomMetricResponseCompoundDocument } from '../model/getCustomMetricResponseCompoundDocument';
import { GetFlowResponseCollection } from '../model/getFlowResponseCollection';
import { GetMetricFlowTriggersRelationshipsResponseCollection } from '../model/getMetricFlowTriggersRelationshipsResponseCollection';
import { GetMetricPropertiesRelationshipsResponseCollection } from '../model/getMetricPropertiesRelationshipsResponseCollection';
import { GetMetricPropertyMetricRelationshipResponse } from '../model/getMetricPropertyMetricRelationshipResponse';
import { GetMetricPropertyResponseCollection } from '../model/getMetricPropertyResponseCollection';
import { GetMetricPropertyResponseCompoundDocument } from '../model/getMetricPropertyResponseCompoundDocument';
import { GetMetricResponse } from '../model/getMetricResponse';
import { GetMetricResponseCollection } from '../model/getMetricResponseCollection';
import { GetMetricResponseCollectionCompoundDocument } from '../model/getMetricResponseCollectionCompoundDocument';
import { GetMetricResponseCompoundDocument } from '../model/getMetricResponseCompoundDocument';
import { MetricAggregateQuery } from '../model/metricAggregateQuery';
import { PatchCustomMetricResponse } from '../model/patchCustomMetricResponse';
import { PostCustomMetricResponse } from '../model/postCustomMetricResponse';
import { PostMetricAggregateResponse } from '../model/postMetricAggregateResponse';
import { Session } from './apis';
export declare class MetricsApi {
    session: Session;
    protected _basePath: string;
    protected _defaultHeaders: any;
    protected _useQuerystring: boolean;
    constructor(session: Session);
    set useQuerystring(value: boolean);
    set basePath(basePath: string);
    set defaultHeaders(defaultHeaders: any);
    get defaultHeaders(): any;
    get basePath(): string;
    /**
     * Create a new custom metric.  Custom metric objects must include a `name` and `definition`.<br><br>*Rate limits*:<br>Burst: `1/s`<br>Steady: `15/m`<br>Daily: `15/d`  **Scopes:** `metrics:write`
     * @summary Create Custom Metric
     * @param customMetricCreateQuery Create a custom metric.
     
     */
    createCustomMetric(customMetricCreateQuery: CustomMetricCreateQuery): Promise<{
        response: AxiosResponse;
        body: PostCustomMetricResponse;
    }>;
    /**
     * Delete a custom metric with the given custom metric ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`  **Scopes:** `metrics:write`
     * @summary Delete Custom Metric
     * @param id The ID of the custom metric
     
     */
    deleteCustomMetric(id: string): Promise<{
        response: AxiosResponse;
        body?: any;
    }>;
    /**
     * Get a custom metric with the given custom metric ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`  **Scopes:** `metrics:read`
     * @summary Get Custom Metric
     * @param id The ID of the custom metric
     * @param fieldsCustomMetric For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#sparse-fieldsets* @param fieldsMetric For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#sparse-fieldsets* @param include For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#relationships
     */
    getCustomMetric(id: string, options?: {
        fieldsCustomMetric?: Array<'name' | 'created' | 'updated' | 'definition' | 'definition.aggregation_method' | 'definition.metric_groups'>;
        fieldsMetric?: Array<'name' | 'created' | 'updated' | 'integration'>;
        include?: Array<'metrics'>;
    }): Promise<{
        response: AxiosResponse;
        body: GetCustomMetricResponseCompoundDocument;
    }>;
    /**
     * Get all custom metrics in an account.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`  **Scopes:** `metrics:read`
     * @summary Get Custom Metrics
     
     * @param fieldsCustomMetric For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#sparse-fieldsets* @param fieldsMetric For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#sparse-fieldsets* @param include For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#relationships
     */
    getCustomMetrics(options?: {
        fieldsCustomMetric?: Array<'name' | 'created' | 'updated' | 'definition' | 'definition.aggregation_method' | 'definition.metric_groups'>;
        fieldsMetric?: Array<'name' | 'created' | 'updated' | 'integration'>;
        include?: Array<'metrics'>;
    }): Promise<{
        response: AxiosResponse;
        body: GetCustomMetricResponseCollectionCompoundDocument;
    }>;
    /**
     * Get all flows where the given metric is being used as the trigger.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`  **Scopes:** `flows:read` `metrics:read`
     * @summary Get Flows Triggered by Metric
     * @param id
     * @param fieldsFlow For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#sparse-fieldsets
     */
    getFlowsTriggeredByMetric(id: string, options?: {
        fieldsFlow?: Array<'name' | 'status' | 'archived' | 'created' | 'updated' | 'trigger_type'>;
    }): Promise<{
        response: AxiosResponse;
        body: GetFlowResponseCollection;
    }>;
    /**
     * Get the IDs of all flows where the given metric is being used as the trigger.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`  **Scopes:** `flows:read` `metrics:read`
     * @summary Get IDs for Flows Triggered by Metric
     * @param id
     
     */
    getIdsForFlowsTriggeredByMetric(id: string): Promise<{
        response: AxiosResponse;
        body: GetMetricFlowTriggersRelationshipsResponseCollection;
    }>;
    /**
     * Get a metric with the given metric ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`  **Scopes:** `metrics:read`
     * @summary Get Metric
     * @param id Metric ID
     * @param fieldsFlow For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#sparse-fieldsets* @param fieldsMetric For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#sparse-fieldsets* @param include For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#relationships
     */
    getMetric(id: string, options?: {
        fieldsFlow?: Array<'name' | 'status' | 'archived' | 'created' | 'updated' | 'trigger_type'>;
        fieldsMetric?: Array<'name' | 'created' | 'updated' | 'integration'>;
        include?: Array<'flow-triggers'>;
    }): Promise<{
        response: AxiosResponse;
        body: GetMetricResponseCompoundDocument;
    }>;
    /**
     * Get the metric for the given metric property ID.<br><br>*Rate limits*:<br>Burst: `1/s`<br>Steady: `15/m`  **Scopes:** `metrics:read`
     * @summary Get Metric for Metric Property
     * @param id The ID of the metric property
     * @param fieldsMetric For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#sparse-fieldsets
     */
    getMetricForMetricProperty(id: string, options?: {
        fieldsMetric?: Array<'name' | 'created' | 'updated' | 'integration'>;
    }): Promise<{
        response: AxiosResponse;
        body: GetMetricResponse;
    }>;
    /**
     * Get the ID of the metric for the given metric property.<br><br>*Rate limits*:<br>Burst: `1/s`<br>Steady: `15/m`  **Scopes:** `metrics:read`
     * @summary Get Metric ID for Metric Property
     * @param id The ID of the metric property
     
     */
    getMetricIdForMetricProperty(id: string): Promise<{
        response: AxiosResponse;
        body: GetMetricPropertyMetricRelationshipResponse;
    }>;
    /**
     * Get all metrics for the given custom metric ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`  **Scopes:** `metrics:read`
     * @summary Get Metric IDs for Custom Metric
     * @param id The ID of the custom metric
     
     */
    getMetricIdsForCustomMetric(id: string): Promise<{
        response: AxiosResponse;
        body: GetCustomMetricMetricsRelationshipsResponseCollection;
    }>;
    /**
     * Get a metric property with the given metric property ID.<br><br>*Rate limits*:<br>Burst: `1/s`<br>Steady: `15/m`  **Scopes:** `metrics:read`
     * @summary Get Metric Property
     * @param id The ID of the metric property
     * @param additionalFieldsMetricProperty Request additional fields not included by default in the response. Supported values: \&#39;sample_values\&#39;* @param fieldsMetricProperty For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#sparse-fieldsets* @param fieldsMetric For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#sparse-fieldsets* @param include For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#relationships
     */
    getMetricProperty(id: string, options?: {
        additionalFieldsMetricProperty?: Array<'sample_values'>;
        fieldsMetricProperty?: Array<'label' | 'property' | 'inferred_type' | 'sample_values'>;
        fieldsMetric?: Array<'name' | 'created' | 'updated' | 'integration'>;
        include?: Array<'metric'>;
    }): Promise<{
        response: AxiosResponse;
        body: GetMetricPropertyResponseCompoundDocument;
    }>;
    /**
     * Get all metrics in an account.  Requests can be filtered by the following fields: integration `name`, integration `category`  Returns a maximum of 200 results per page.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`  **Scopes:** `metrics:read`
     * @summary Get Metrics
     
     * @param fieldsFlow For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#sparse-fieldsets* @param fieldsMetric For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#sparse-fieldsets* @param filter For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;integration.name&#x60;: &#x60;equals&#x60;&lt;br&gt;&#x60;integration.category&#x60;: &#x60;equals&#x60;* @param include For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#relationships* @param pageCursor For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#pagination
     */
    getMetrics(options?: {
        fieldsFlow?: Array<'name' | 'status' | 'archived' | 'created' | 'updated' | 'trigger_type'>;
        fieldsMetric?: Array<'name' | 'created' | 'updated' | 'integration'>;
        filter?: string;
        include?: Array<'flow-triggers'>;
        pageCursor?: string;
    }): Promise<{
        response: AxiosResponse;
        body: GetMetricResponseCollectionCompoundDocument;
    }>;
    /**
     * Get all metrics for the given custom metric ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`  **Scopes:** `metrics:read`
     * @summary Get Metrics for Custom Metric
     * @param id The ID of the custom metric
     * @param fieldsMetric For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#sparse-fieldsets
     */
    getMetricsForCustomMetric(id: string, options?: {
        fieldsMetric?: Array<'name' | 'created' | 'updated' | 'integration'>;
    }): Promise<{
        response: AxiosResponse;
        body: GetMetricResponseCollection;
    }>;
    /**
     * Get the metric properties for the given metric ID.<br><br>*Rate limits*:<br>Burst: `1/s`<br>Steady: `15/m`  **Scopes:** `metrics:read`
     * @summary Get Properties for Metric
     * @param id The ID of the metric
     * @param additionalFieldsMetricProperty Request additional fields not included by default in the response. Supported values: \&#39;sample_values\&#39;* @param fieldsMetricProperty For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#sparse-fieldsets
     */
    getPropertiesForMetric(id: string, options?: {
        additionalFieldsMetricProperty?: Array<'sample_values'>;
        fieldsMetricProperty?: Array<'label' | 'property' | 'inferred_type' | 'sample_values'>;
    }): Promise<{
        response: AxiosResponse;
        body: GetMetricPropertyResponseCollection;
    }>;
    /**
     * Get the IDs of metric properties for the given metric.<br><br>*Rate limits*:<br>Burst: `1/s`<br>Steady: `15/m`  **Scopes:** `metrics:read`
     * @summary Get Property IDs for Metric
     * @param id The ID of the metric
     
     */
    getPropertyIdsForMetric(id: string): Promise<{
        response: AxiosResponse;
        body: GetMetricPropertiesRelationshipsResponseCollection;
    }>;
    /**
     * Query and aggregate event data associated with a metric, including native Klaviyo metrics, integration-specific metrics, and custom events (not to be confused with [custom metrics](https://developers.klaviyo.com/en/reference/custom_metrics_api_overview), which are not supported at this time). Queries must be passed in the JSON body of your `POST` request.  To request campaign and flow performance data that matches the data shown in Klaviyo\'s UI, we recommend the [Reporting API](https://developers.klaviyo.com/en/reference/reporting_api_overview).  Results can be filtered and grouped by time, event, or profile dimensions.  To learn more about how to use this endpoint, check out our new [Using the Query Metric Aggregates Endpoint guide](https://developers.klaviyo.com/en/docs/using-the-query-metric-aggregates-endpoint).  For a comprehensive list of request body parameters, native Klaviyo metrics, and their associated attributes for grouping and filtering, please refer to the [metrics attributes guide](https://developers.klaviyo.com/en/docs/supported_metrics_and_attributes).<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`  **Scopes:** `metrics:read`
     * @summary Query Metric Aggregates
     * @param metricAggregateQuery Retrieve Metric Aggregations
     
     */
    queryMetricAggregates(metricAggregateQuery: MetricAggregateQuery): Promise<{
        response: AxiosResponse;
        body: PostMetricAggregateResponse;
    }>;
    /**
     * Update a custom metric with the given custom metric ID.<br><br>*Rate limits*:<br>Burst: `1/s`<br>Steady: `15/m`<br>Daily: `15/d`  **Scopes:** `metrics:write`
     * @summary Update Custom Metric
     * @param id The ID of the custom metric* @param customMetricPartialUpdateQuery Update a custom metric by ID.
     
     */
    updateCustomMetric(id: string, customMetricPartialUpdateQuery: CustomMetricPartialUpdateQuery): Promise<{
        response: AxiosResponse;
        body: PatchCustomMetricResponse;
    }>;
}
export interface MetricsApi {
    /**
     * Alias of {@link MetricsApi.getFlowsTriggeredByMetric}
     *
     * @deprecated Use {@link MetricsApi.getFlowsTriggeredByMetric} instead
     */
    getFlowTriggersForMetric: typeof MetricsApi.prototype.getFlowsTriggeredByMetric;
}
export interface MetricsApi {
    /**
     * Alias of {@link MetricsApi.getFlowsTriggeredByMetric}
     *
     * @deprecated Use {@link MetricsApi.getFlowsTriggeredByMetric} instead
     */
    getMetricFlowTriggers: typeof MetricsApi.prototype.getFlowsTriggeredByMetric;
}
export interface MetricsApi {
    /**
     * Alias of {@link MetricsApi.getIdsForFlowsTriggeredByMetric}
     *
     * @deprecated Use {@link MetricsApi.getIdsForFlowsTriggeredByMetric} instead
     */
    getFlowTriggerIdsForMetric: typeof MetricsApi.prototype.getIdsForFlowsTriggeredByMetric;
}
export interface MetricsApi {
    /**
     * Alias of {@link MetricsApi.getIdsForFlowsTriggeredByMetric}
     *
     * @deprecated Use {@link MetricsApi.getIdsForFlowsTriggeredByMetric} instead
     */
    getMetricRelationshipsFlowTriggers: typeof MetricsApi.prototype.getIdsForFlowsTriggeredByMetric;
}
export interface MetricsApi {
    /**
     * Alias of {@link MetricsApi.getMetricForMetricProperty}
     *
     * @deprecated Use {@link MetricsApi.getMetricForMetricProperty} instead
     */
    getMetricPropertyMetric: typeof MetricsApi.prototype.getMetricForMetricProperty;
}
export interface MetricsApi {
    /**
     * Alias of {@link MetricsApi.getMetricIdForMetricProperty}
     *
     * @deprecated Use {@link MetricsApi.getMetricIdForMetricProperty} instead
     */
    getMetricPropertyRelationshipsMetric: typeof MetricsApi.prototype.getMetricIdForMetricProperty;
}
export interface MetricsApi {
    /**
     * Alias of {@link MetricsApi.getMetricIdsForCustomMetric}
     *
     * @deprecated Use {@link MetricsApi.getMetricIdsForCustomMetric} instead
     */
    getCustomMetricRelationshipsMetrics: typeof MetricsApi.prototype.getMetricIdsForCustomMetric;
}
export interface MetricsApi {
    /**
     * Alias of {@link MetricsApi.getMetricsForCustomMetric}
     *
     * @deprecated Use {@link MetricsApi.getMetricsForCustomMetric} instead
     */
    getCustomMetricMetrics: typeof MetricsApi.prototype.getMetricsForCustomMetric;
}
export interface MetricsApi {
    /**
     * Alias of {@link MetricsApi.getPropertiesForMetric}
     *
     * @deprecated Use {@link MetricsApi.getPropertiesForMetric} instead
     */
    getMetricMetricProperties: typeof MetricsApi.prototype.getPropertiesForMetric;
}
export interface MetricsApi {
    /**
     * Alias of {@link MetricsApi.getPropertiesForMetric}
     *
     * @deprecated Use {@link MetricsApi.getPropertiesForMetric} instead
     */
    getMetricProperties: typeof MetricsApi.prototype.getPropertiesForMetric;
}
export interface MetricsApi {
    /**
     * Alias of {@link MetricsApi.getPropertyIdsForMetric}
     *
     * @deprecated Use {@link MetricsApi.getPropertyIdsForMetric} instead
     */
    getMetricRelationshipsMetricProperties: typeof MetricsApi.prototype.getPropertyIdsForMetric;
}
export interface MetricsApi {
    /**
     * Alias of {@link MetricsApi.getPropertyIdsForMetric}
     *
     * @deprecated Use {@link MetricsApi.getPropertyIdsForMetric} instead
     */
    getMetricRelationshipsProperties: typeof MetricsApi.prototype.getPropertyIdsForMetric;
}
export interface MetricsApi {
    /**
     * Alias of {@link MetricsApi.queryMetricAggregates}
     *
     * @deprecated Use {@link MetricsApi.queryMetricAggregates} instead
     */
    createMetricAggregate: typeof MetricsApi.prototype.queryMetricAggregates;
}
