/**
 * Klaviyo API
 * The Klaviyo REST API. Please visit https://developers.klaviyo.com for more details.
 *
 * Contact: developers@klaviyo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { AxiosResponse } from "axios";
import { GetWebhookResponseCollectionCompoundDocument } from '../model/getWebhookResponseCollectionCompoundDocument';
import { GetWebhookResponseCompoundDocument } from '../model/getWebhookResponseCompoundDocument';
import { GetWebhookTopicResponse } from '../model/getWebhookTopicResponse';
import { GetWebhookTopicResponseCollection } from '../model/getWebhookTopicResponseCollection';
import { PatchWebhookResponse } from '../model/patchWebhookResponse';
import { PostWebhookResponse } from '../model/postWebhookResponse';
import { WebhookCreateQuery } from '../model/webhookCreateQuery';
import { WebhookPartialUpdateQuery } from '../model/webhookPartialUpdateQuery';
import { Session } from './apis';
export declare class WebhooksApi {
    session: Session;
    protected _basePath: string;
    protected _defaultHeaders: any;
    protected _useQuerystring: boolean;
    constructor(session: Session);
    set useQuerystring(value: boolean);
    set basePath(basePath: string);
    set defaultHeaders(defaultHeaders: any);
    get defaultHeaders(): any;
    get basePath(): string;
    /**
     * Create a new Webhook<br><br>*Rate limits*:<br>Burst: `1/s`<br>Steady: `15/m`  **Scopes:** `webhooks:write`
     * @summary Create Webhook
     * @param webhookCreateQuery
     
     */
    createWebhook(webhookCreateQuery: WebhookCreateQuery): Promise<{
        response: AxiosResponse;
        body: PostWebhookResponse;
    }>;
    /**
     * Delete a webhook with the given ID.<br><br>*Rate limits*:<br>Burst: `1/s`<br>Steady: `15/m`  **Scopes:** `webhooks:write`
     * @summary Delete Webhook
     * @param id The ID of the webhook.
     
     */
    deleteWebhook(id: string): Promise<{
        response: AxiosResponse;
        body?: any;
    }>;
    /**
     * Get the webhook with the given ID.<br><br>*Rate limits*:<br>Burst: `1/s`<br>Steady: `15/m`  **Scopes:** `webhooks:read`
     * @summary Get Webhook
     * @param id The ID of the webhook.
     * @param fieldsWebhook For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#sparse-fieldsets* @param include For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#relationships
     */
    getWebhook(id: string, options?: {
        fieldsWebhook?: Array<'name' | 'description' | 'endpoint_url' | 'enabled' | 'created_at' | 'updated_at'>;
        include?: Array<'webhook-topics'>;
    }): Promise<{
        response: AxiosResponse;
        body: GetWebhookResponseCompoundDocument;
    }>;
    /**
     * Get the webhook topic with the given ID.<br><br>*Rate limits*:<br>Burst: `1/s`<br>Steady: `15/m`  **Scopes:** `webhooks:read`
     * @summary Get Webhook Topic
     * @param id The ID of the webhook topic.
     
     */
    getWebhookTopic(id: string): Promise<{
        response: AxiosResponse;
        body: GetWebhookTopicResponse;
    }>;
    /**
     * Get all webhook topics in a Klaviyo account.<br><br>*Rate limits*:<br>Burst: `1/s`<br>Steady: `15/m`  **Scopes:** `webhooks:read`
     * @summary Get Webhook Topics
     
     
     */
    getWebhookTopics(): Promise<{
        response: AxiosResponse;
        body: GetWebhookTopicResponseCollection;
    }>;
    /**
     * Get all webhooks in an account.<br><br>*Rate limits*:<br>Burst: `1/s`<br>Steady: `15/m`  **Scopes:** `webhooks:read`
     * @summary Get Webhooks
     
     * @param fieldsWebhook For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#sparse-fieldsets* @param include For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#relationships
     */
    getWebhooks(options?: {
        fieldsWebhook?: Array<'name' | 'description' | 'endpoint_url' | 'enabled' | 'created_at' | 'updated_at'>;
        include?: Array<'webhook-topics'>;
    }): Promise<{
        response: AxiosResponse;
        body: GetWebhookResponseCollectionCompoundDocument;
    }>;
    /**
     * Update the webhook with the given ID.<br><br>*Rate limits*:<br>Burst: `1/s`<br>Steady: `15/m`  **Scopes:** `webhooks:write`
     * @summary Update Webhook
     * @param id The ID of the webhook.* @param webhookPartialUpdateQuery
     
     */
    updateWebhook(id: string, webhookPartialUpdateQuery: WebhookPartialUpdateQuery): Promise<{
        response: AxiosResponse;
        body: PatchWebhookResponse;
    }>;
}
