/**
 * Klaviyo API
 * The Klaviyo REST API. Please visit https://developers.klaviyo.com for more details.
 *
 * Contact: developers@klaviyo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { AxiosResponse } from "axios";
import { CatalogCategoryCreateJobCreateQuery } from '../model/catalogCategoryCreateJobCreateQuery';
import { CatalogCategoryCreateQuery } from '../model/catalogCategoryCreateQuery';
import { CatalogCategoryDeleteJobCreateQuery } from '../model/catalogCategoryDeleteJobCreateQuery';
import { CatalogCategoryItemOp } from '../model/catalogCategoryItemOp';
import { CatalogCategoryUpdateJobCreateQuery } from '../model/catalogCategoryUpdateJobCreateQuery';
import { CatalogCategoryUpdateQuery } from '../model/catalogCategoryUpdateQuery';
import { CatalogItemCategoryOp } from '../model/catalogItemCategoryOp';
import { CatalogItemCreateJobCreateQuery } from '../model/catalogItemCreateJobCreateQuery';
import { CatalogItemCreateQuery } from '../model/catalogItemCreateQuery';
import { CatalogItemDeleteJobCreateQuery } from '../model/catalogItemDeleteJobCreateQuery';
import { CatalogItemUpdateJobCreateQuery } from '../model/catalogItemUpdateJobCreateQuery';
import { CatalogItemUpdateQuery } from '../model/catalogItemUpdateQuery';
import { CatalogVariantCreateJobCreateQuery } from '../model/catalogVariantCreateJobCreateQuery';
import { CatalogVariantCreateQuery } from '../model/catalogVariantCreateQuery';
import { CatalogVariantDeleteJobCreateQuery } from '../model/catalogVariantDeleteJobCreateQuery';
import { CatalogVariantUpdateJobCreateQuery } from '../model/catalogVariantUpdateJobCreateQuery';
import { CatalogVariantUpdateQuery } from '../model/catalogVariantUpdateQuery';
import { GetCatalogCategoryCreateJobResponseCollectionCompoundDocument } from '../model/getCatalogCategoryCreateJobResponseCollectionCompoundDocument';
import { GetCatalogCategoryCreateJobResponseCompoundDocument } from '../model/getCatalogCategoryCreateJobResponseCompoundDocument';
import { GetCatalogCategoryDeleteJobResponse } from '../model/getCatalogCategoryDeleteJobResponse';
import { GetCatalogCategoryDeleteJobResponseCollection } from '../model/getCatalogCategoryDeleteJobResponseCollection';
import { GetCatalogCategoryItemsRelationshipsResponseCollection } from '../model/getCatalogCategoryItemsRelationshipsResponseCollection';
import { GetCatalogCategoryResponse } from '../model/getCatalogCategoryResponse';
import { GetCatalogCategoryResponseCollection } from '../model/getCatalogCategoryResponseCollection';
import { GetCatalogCategoryUpdateJobResponseCollectionCompoundDocument } from '../model/getCatalogCategoryUpdateJobResponseCollectionCompoundDocument';
import { GetCatalogCategoryUpdateJobResponseCompoundDocument } from '../model/getCatalogCategoryUpdateJobResponseCompoundDocument';
import { GetCatalogItemCategoriesRelationshipsResponseCollection } from '../model/getCatalogItemCategoriesRelationshipsResponseCollection';
import { GetCatalogItemCreateJobResponseCollectionCompoundDocument } from '../model/getCatalogItemCreateJobResponseCollectionCompoundDocument';
import { GetCatalogItemCreateJobResponseCompoundDocument } from '../model/getCatalogItemCreateJobResponseCompoundDocument';
import { GetCatalogItemDeleteJobResponse } from '../model/getCatalogItemDeleteJobResponse';
import { GetCatalogItemDeleteJobResponseCollection } from '../model/getCatalogItemDeleteJobResponseCollection';
import { GetCatalogItemResponseCollectionCompoundDocument } from '../model/getCatalogItemResponseCollectionCompoundDocument';
import { GetCatalogItemResponseCompoundDocument } from '../model/getCatalogItemResponseCompoundDocument';
import { GetCatalogItemUpdateJobResponseCollectionCompoundDocument } from '../model/getCatalogItemUpdateJobResponseCollectionCompoundDocument';
import { GetCatalogItemUpdateJobResponseCompoundDocument } from '../model/getCatalogItemUpdateJobResponseCompoundDocument';
import { GetCatalogItemVariantsRelationshipsResponseCollection } from '../model/getCatalogItemVariantsRelationshipsResponseCollection';
import { GetCatalogVariantCreateJobResponseCollectionCompoundDocument } from '../model/getCatalogVariantCreateJobResponseCollectionCompoundDocument';
import { GetCatalogVariantCreateJobResponseCompoundDocument } from '../model/getCatalogVariantCreateJobResponseCompoundDocument';
import { GetCatalogVariantDeleteJobResponse } from '../model/getCatalogVariantDeleteJobResponse';
import { GetCatalogVariantDeleteJobResponseCollection } from '../model/getCatalogVariantDeleteJobResponseCollection';
import { GetCatalogVariantResponse } from '../model/getCatalogVariantResponse';
import { GetCatalogVariantResponseCollection } from '../model/getCatalogVariantResponseCollection';
import { GetCatalogVariantUpdateJobResponseCollectionCompoundDocument } from '../model/getCatalogVariantUpdateJobResponseCollectionCompoundDocument';
import { GetCatalogVariantUpdateJobResponseCompoundDocument } from '../model/getCatalogVariantUpdateJobResponseCompoundDocument';
import { PatchCatalogCategoryResponse } from '../model/patchCatalogCategoryResponse';
import { PatchCatalogItemResponse } from '../model/patchCatalogItemResponse';
import { PatchCatalogVariantResponse } from '../model/patchCatalogVariantResponse';
import { PostCatalogCategoryCreateJobResponse } from '../model/postCatalogCategoryCreateJobResponse';
import { PostCatalogCategoryDeleteJobResponse } from '../model/postCatalogCategoryDeleteJobResponse';
import { PostCatalogCategoryResponse } from '../model/postCatalogCategoryResponse';
import { PostCatalogCategoryUpdateJobResponse } from '../model/postCatalogCategoryUpdateJobResponse';
import { PostCatalogItemCreateJobResponse } from '../model/postCatalogItemCreateJobResponse';
import { PostCatalogItemDeleteJobResponse } from '../model/postCatalogItemDeleteJobResponse';
import { PostCatalogItemResponse } from '../model/postCatalogItemResponse';
import { PostCatalogItemUpdateJobResponse } from '../model/postCatalogItemUpdateJobResponse';
import { PostCatalogVariantCreateJobResponse } from '../model/postCatalogVariantCreateJobResponse';
import { PostCatalogVariantDeleteJobResponse } from '../model/postCatalogVariantDeleteJobResponse';
import { PostCatalogVariantResponse } from '../model/postCatalogVariantResponse';
import { PostCatalogVariantUpdateJobResponse } from '../model/postCatalogVariantUpdateJobResponse';
import { ServerBISSubscriptionCreateQuery } from '../model/serverBISSubscriptionCreateQuery';
import { Session } from './apis';
export declare class CatalogsApi {
    session: Session;
    protected _basePath: string;
    protected _defaultHeaders: any;
    protected _useQuerystring: boolean;
    constructor(session: Session);
    set useQuerystring(value: boolean);
    set basePath(basePath: string);
    set defaultHeaders(defaultHeaders: any);
    get defaultHeaders(): any;
    get basePath(): string;
    /**
     * Create a new catalog category relationship for the given item ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `catalogs:write`
     * @summary Add Categories to Catalog Item
     * @param id The catalog item ID is a compound ID (string), with format: &#x60;{integration}:::{catalog}:::{external_id}&#x60;. Currently, the only supported integration type is &#x60;$custom&#x60;, and the only supported catalog is &#x60;$default&#x60;.* @param catalogItemCategoryOp
     
     */
    addCategoriesToCatalogItem(id: string, catalogItemCategoryOp: CatalogItemCategoryOp): Promise<{
        response: AxiosResponse;
        body?: any;
    }>;
    /**
     * Create a new item relationship for the given category ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `catalogs:write`
     * @summary Add Items to Catalog Category
     * @param id The catalog category ID is a compound ID (string), with format: &#x60;{integration}:::{catalog}:::{external_id}&#x60;. Currently, the only supported integration type is &#x60;$custom&#x60;, and the only supported catalog is &#x60;$default&#x60;.* @param catalogCategoryItemOp
     
     */
    addItemsToCatalogCategory(id: string, catalogCategoryItemOp: CatalogCategoryItemOp): Promise<{
        response: AxiosResponse;
        body?: any;
    }>;
    /**
     * Create a catalog category bulk create job to create a batch of catalog categories.  Accepts up to 100 catalog categories per request. The maximum allowed payload size is 5MB. The maximum number of jobs in progress at one time is 500.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `catalogs:write`
     * @summary Bulk Create Catalog Categories
     * @param catalogCategoryCreateJobCreateQuery
     
     */
    bulkCreateCatalogCategories(catalogCategoryCreateJobCreateQuery: CatalogCategoryCreateJobCreateQuery): Promise<{
        response: AxiosResponse;
        body: PostCatalogCategoryCreateJobResponse;
    }>;
    /**
     * Create a catalog item bulk create job to create a batch of catalog items.  Accepts up to 100 catalog items per request. The maximum allowed payload size is 5MB. The maximum number of jobs in progress at one time is 500.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `catalogs:write`
     * @summary Bulk Create Catalog Items
     * @param catalogItemCreateJobCreateQuery
     
     */
    bulkCreateCatalogItems(catalogItemCreateJobCreateQuery: CatalogItemCreateJobCreateQuery): Promise<{
        response: AxiosResponse;
        body: PostCatalogItemCreateJobResponse;
    }>;
    /**
     * Create a catalog variant bulk create job to create a batch of catalog variants.  Accepts up to 100 catalog variants per request. The maximum allowed payload size is 5MB. The maximum number of jobs in progress at one time is 500.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `catalogs:write`
     * @summary Bulk Create Catalog Variants
     * @param catalogVariantCreateJobCreateQuery
     
     */
    bulkCreateCatalogVariants(catalogVariantCreateJobCreateQuery: CatalogVariantCreateJobCreateQuery): Promise<{
        response: AxiosResponse;
        body: PostCatalogVariantCreateJobResponse;
    }>;
    /**
     * Create a catalog category bulk delete job to delete a batch of catalog categories.  Accepts up to 100 catalog categories per request. The maximum allowed payload size is 5MB. The maximum number of jobs in progress at one time is 500.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `catalogs:write`
     * @summary Bulk Delete Catalog Categories
     * @param catalogCategoryDeleteJobCreateQuery
     
     */
    bulkDeleteCatalogCategories(catalogCategoryDeleteJobCreateQuery: CatalogCategoryDeleteJobCreateQuery): Promise<{
        response: AxiosResponse;
        body: PostCatalogCategoryDeleteJobResponse;
    }>;
    /**
     * Create a catalog item bulk delete job to delete a batch of catalog items.  Accepts up to 100 catalog items per request. The maximum allowed payload size is 5MB. The maximum number of jobs in progress at one time is 500.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `catalogs:write`
     * @summary Bulk Delete Catalog Items
     * @param catalogItemDeleteJobCreateQuery
     
     */
    bulkDeleteCatalogItems(catalogItemDeleteJobCreateQuery: CatalogItemDeleteJobCreateQuery): Promise<{
        response: AxiosResponse;
        body: PostCatalogItemDeleteJobResponse;
    }>;
    /**
     * Create a catalog variant bulk delete job to delete a batch of catalog variants.  Accepts up to 100 catalog variants per request. The maximum allowed payload size is 5MB. The maximum number of jobs in progress at one time is 500.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `catalogs:write`
     * @summary Bulk Delete Catalog Variants
     * @param catalogVariantDeleteJobCreateQuery
     
     */
    bulkDeleteCatalogVariants(catalogVariantDeleteJobCreateQuery: CatalogVariantDeleteJobCreateQuery): Promise<{
        response: AxiosResponse;
        body: PostCatalogVariantDeleteJobResponse;
    }>;
    /**
     * Create a catalog category bulk update job to update a batch of catalog categories.  Accepts up to 100 catalog categories per request. The maximum allowed payload size is 5MB. The maximum number of jobs in progress at one time is 500.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `catalogs:write`
     * @summary Bulk Update Catalog Categories
     * @param catalogCategoryUpdateJobCreateQuery
     
     */
    bulkUpdateCatalogCategories(catalogCategoryUpdateJobCreateQuery: CatalogCategoryUpdateJobCreateQuery): Promise<{
        response: AxiosResponse;
        body: PostCatalogCategoryUpdateJobResponse;
    }>;
    /**
     * Create a catalog item bulk update job to update a batch of catalog items.  Accepts up to 100 catalog items per request. The maximum allowed payload size is 5MB. The maximum number of jobs in progress at one time is 500.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `catalogs:write`
     * @summary Bulk Update Catalog Items
     * @param catalogItemUpdateJobCreateQuery
     
     */
    bulkUpdateCatalogItems(catalogItemUpdateJobCreateQuery: CatalogItemUpdateJobCreateQuery): Promise<{
        response: AxiosResponse;
        body: PostCatalogItemUpdateJobResponse;
    }>;
    /**
     * Create a catalog variant bulk update job to update a batch of catalog variants.  Accepts up to 100 catalog variants per request. The maximum allowed payload size is 5MB. The maximum number of jobs in progress at one time is 500.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `catalogs:write`
     * @summary Bulk Update Catalog Variants
     * @param catalogVariantUpdateJobCreateQuery
     
     */
    bulkUpdateCatalogVariants(catalogVariantUpdateJobCreateQuery: CatalogVariantUpdateJobCreateQuery): Promise<{
        response: AxiosResponse;
        body: PostCatalogVariantUpdateJobResponse;
    }>;
    /**
     * Subscribe a profile to receive back in stock notifications. Check out [our Back in Stock API guide](https://developers.klaviyo.com/en/docs/how_to_set_up_custom_back_in_stock) for more details.  This endpoint is specifically designed to be called from server-side applications. To create subscriptions from client-side contexts, use [POST /client/back-in-stock-subscriptions](https://developers.klaviyo.com/en/reference/create_client_back_in_stock_subscription).<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `catalogs:write` `profiles:write`
     * @summary Create Back In Stock Subscription
     * @param serverBISSubscriptionCreateQuery
     
     */
    createBackInStockSubscription(serverBISSubscriptionCreateQuery: ServerBISSubscriptionCreateQuery): Promise<{
        response: AxiosResponse;
        body?: any;
    }>;
    /**
     * Create a new catalog category.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `catalogs:write`
     * @summary Create Catalog Category
     * @param catalogCategoryCreateQuery
     
     */
    createCatalogCategory(catalogCategoryCreateQuery: CatalogCategoryCreateQuery): Promise<{
        response: AxiosResponse;
        body: PostCatalogCategoryResponse;
    }>;
    /**
     * Create a new catalog item.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `catalogs:write`
     * @summary Create Catalog Item
     * @param catalogItemCreateQuery
     
     */
    createCatalogItem(catalogItemCreateQuery: CatalogItemCreateQuery): Promise<{
        response: AxiosResponse;
        body: PostCatalogItemResponse;
    }>;
    /**
     * Create a new variant for a related catalog item.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `catalogs:write`
     * @summary Create Catalog Variant
     * @param catalogVariantCreateQuery
     
     */
    createCatalogVariant(catalogVariantCreateQuery: CatalogVariantCreateQuery): Promise<{
        response: AxiosResponse;
        body: PostCatalogVariantResponse;
    }>;
    /**
     * Delete a catalog category using the given category ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `catalogs:write`
     * @summary Delete Catalog Category
     * @param id The catalog category ID is a compound ID (string), with format: &#x60;{integration}:::{catalog}:::{external_id}&#x60;. Currently, the only supported integration type is &#x60;$custom&#x60;, and the only supported catalog is &#x60;$default&#x60;.
     
     */
    deleteCatalogCategory(id: string): Promise<{
        response: AxiosResponse;
        body?: any;
    }>;
    /**
     * Delete a catalog item with the given item ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `catalogs:write`
     * @summary Delete Catalog Item
     * @param id The catalog item ID is a compound ID (string), with format: &#x60;{integration}:::{catalog}:::{external_id}&#x60;. Currently, the only supported integration type is &#x60;$custom&#x60;, and the only supported catalog is &#x60;$default&#x60;.
     
     */
    deleteCatalogItem(id: string): Promise<{
        response: AxiosResponse;
        body?: any;
    }>;
    /**
     * Delete a catalog item variant with the given variant ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `catalogs:write`
     * @summary Delete Catalog Variant
     * @param id The catalog variant ID is a compound ID (string), with format: &#x60;{integration}:::{catalog}:::{external_id}&#x60;. Currently, the only supported integration type is &#x60;$custom&#x60;, and the only supported catalog is &#x60;$default&#x60;.
     
     */
    deleteCatalogVariant(id: string): Promise<{
        response: AxiosResponse;
        body?: any;
    }>;
    /**
     * Get a catalog item bulk create job with the given job ID.  An `include` parameter can be provided to get the following related resource data: `items`.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `catalogs:read`
     * @summary Get Bulk Create Catalog Items Job
     * @param jobId ID of the job to retrieve.
     * @param fieldsCatalogItemBulkCreateJob For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#sparse-fieldsets* @param fieldsCatalogItem For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#sparse-fieldsets* @param include For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#relationships
     */
    getBulkCreateCatalogItemsJob(jobId: string, options?: {
        fieldsCatalogItemBulkCreateJob?: Array<'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'errors' | 'expires_at'>;
        fieldsCatalogItem?: Array<'external_id' | 'title' | 'description' | 'price' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>;
        include?: Array<'items'>;
    }): Promise<{
        response: AxiosResponse;
        body: GetCatalogItemCreateJobResponseCompoundDocument;
    }>;
    /**
     * Get all catalog item bulk create jobs.  Returns a maximum of 100 jobs per request.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `catalogs:read`
     * @summary Get Bulk Create Catalog Items Jobs
     
     * @param fieldsCatalogItemBulkCreateJob For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#sparse-fieldsets* @param filter For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;status&#x60;: &#x60;equals&#x60;* @param pageCursor For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#pagination
     */
    getBulkCreateCatalogItemsJobs(options?: {
        fieldsCatalogItemBulkCreateJob?: Array<'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'errors' | 'expires_at'>;
        filter?: string;
        pageCursor?: string;
    }): Promise<{
        response: AxiosResponse;
        body: GetCatalogItemCreateJobResponseCollectionCompoundDocument;
    }>;
    /**
     * Get a catalog category bulk create job with the given job ID.  An `include` parameter can be provided to get the following related resource data: `categories`.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `catalogs:read`
     * @summary Get Bulk Create Categories Job
     * @param jobId ID of the job to retrieve.
     * @param fieldsCatalogCategoryBulkCreateJob For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#sparse-fieldsets* @param fieldsCatalogCategory For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#sparse-fieldsets* @param include For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#relationships
     */
    getBulkCreateCategoriesJob(jobId: string, options?: {
        fieldsCatalogCategoryBulkCreateJob?: Array<'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'errors' | 'expires_at'>;
        fieldsCatalogCategory?: Array<'external_id' | 'name' | 'updated'>;
        include?: Array<'categories'>;
    }): Promise<{
        response: AxiosResponse;
        body: GetCatalogCategoryCreateJobResponseCompoundDocument;
    }>;
    /**
     * Get all catalog category bulk create jobs.  Returns a maximum of 100 jobs per request.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `catalogs:read`
     * @summary Get Bulk Create Categories Jobs
     
     * @param fieldsCatalogCategoryBulkCreateJob For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#sparse-fieldsets* @param filter For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;status&#x60;: &#x60;equals&#x60;* @param pageCursor For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#pagination
     */
    getBulkCreateCategoriesJobs(options?: {
        fieldsCatalogCategoryBulkCreateJob?: Array<'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'errors' | 'expires_at'>;
        filter?: string;
        pageCursor?: string;
    }): Promise<{
        response: AxiosResponse;
        body: GetCatalogCategoryCreateJobResponseCollectionCompoundDocument;
    }>;
    /**
     * Get a catalog variant bulk create job with the given job ID.  An `include` parameter can be provided to get the following related resource data: `variants`.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `catalogs:read`
     * @summary Get Bulk Create Variants Job
     * @param jobId ID of the job to retrieve.
     * @param fieldsCatalogVariantBulkCreateJob For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#sparse-fieldsets* @param fieldsCatalogVariant For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#sparse-fieldsets* @param include For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#relationships
     */
    getBulkCreateVariantsJob(jobId: string, options?: {
        fieldsCatalogVariantBulkCreateJob?: Array<'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'errors' | 'expires_at'>;
        fieldsCatalogVariant?: Array<'external_id' | 'title' | 'description' | 'sku' | 'inventory_policy' | 'inventory_quantity' | 'price' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>;
        include?: Array<'variants'>;
    }): Promise<{
        response: AxiosResponse;
        body: GetCatalogVariantCreateJobResponseCompoundDocument;
    }>;
    /**
     * Get all catalog variant bulk create jobs.  Returns a maximum of 100 jobs per request.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `catalogs:read`
     * @summary Get Bulk Create Variants Jobs
     
     * @param fieldsCatalogVariantBulkCreateJob For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#sparse-fieldsets* @param filter For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;status&#x60;: &#x60;equals&#x60;* @param pageCursor For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#pagination
     */
    getBulkCreateVariantsJobs(options?: {
        fieldsCatalogVariantBulkCreateJob?: Array<'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'errors' | 'expires_at'>;
        filter?: string;
        pageCursor?: string;
    }): Promise<{
        response: AxiosResponse;
        body: GetCatalogVariantCreateJobResponseCollectionCompoundDocument;
    }>;
    /**
     * Get a catalog item bulk delete job with the given job ID.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `catalogs:read`
     * @summary Get Bulk Delete Catalog Items Job
     * @param jobId ID of the job to retrieve.
     * @param fieldsCatalogItemBulkDeleteJob For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#sparse-fieldsets
     */
    getBulkDeleteCatalogItemsJob(jobId: string, options?: {
        fieldsCatalogItemBulkDeleteJob?: Array<'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'errors' | 'expires_at'>;
    }): Promise<{
        response: AxiosResponse;
        body: GetCatalogItemDeleteJobResponse;
    }>;
    /**
     * Get all catalog item bulk delete jobs.  Returns a maximum of 100 jobs per request.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `catalogs:read`
     * @summary Get Bulk Delete Catalog Items Jobs
     
     * @param fieldsCatalogItemBulkDeleteJob For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#sparse-fieldsets* @param filter For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;status&#x60;: &#x60;equals&#x60;* @param pageCursor For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#pagination
     */
    getBulkDeleteCatalogItemsJobs(options?: {
        fieldsCatalogItemBulkDeleteJob?: Array<'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'errors' | 'expires_at'>;
        filter?: string;
        pageCursor?: string;
    }): Promise<{
        response: AxiosResponse;
        body: GetCatalogItemDeleteJobResponseCollection;
    }>;
    /**
     * Get a catalog category bulk delete job with the given job ID.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `catalogs:read`
     * @summary Get Bulk Delete Categories Job
     * @param jobId ID of the job to retrieve.
     * @param fieldsCatalogCategoryBulkDeleteJob For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#sparse-fieldsets
     */
    getBulkDeleteCategoriesJob(jobId: string, options?: {
        fieldsCatalogCategoryBulkDeleteJob?: Array<'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'errors' | 'expires_at'>;
    }): Promise<{
        response: AxiosResponse;
        body: GetCatalogCategoryDeleteJobResponse;
    }>;
    /**
     * Get all catalog category bulk delete jobs.  Returns a maximum of 100 jobs per request.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `catalogs:read`
     * @summary Get Bulk Delete Categories Jobs
     
     * @param fieldsCatalogCategoryBulkDeleteJob For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#sparse-fieldsets* @param filter For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;status&#x60;: &#x60;equals&#x60;* @param pageCursor For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#pagination
     */
    getBulkDeleteCategoriesJobs(options?: {
        fieldsCatalogCategoryBulkDeleteJob?: Array<'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'errors' | 'expires_at'>;
        filter?: string;
        pageCursor?: string;
    }): Promise<{
        response: AxiosResponse;
        body: GetCatalogCategoryDeleteJobResponseCollection;
    }>;
    /**
     * Get a catalog variant bulk delete job with the given job ID.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `catalogs:read`
     * @summary Get Bulk Delete Variants Job
     * @param jobId ID of the job to retrieve.
     * @param fieldsCatalogVariantBulkDeleteJob For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#sparse-fieldsets
     */
    getBulkDeleteVariantsJob(jobId: string, options?: {
        fieldsCatalogVariantBulkDeleteJob?: Array<'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'errors' | 'expires_at'>;
    }): Promise<{
        response: AxiosResponse;
        body: GetCatalogVariantDeleteJobResponse;
    }>;
    /**
     * Get all catalog variant bulk delete jobs.  Returns a maximum of 100 jobs per request.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `catalogs:read`
     * @summary Get Bulk Delete Variants Jobs
     
     * @param fieldsCatalogVariantBulkDeleteJob For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#sparse-fieldsets* @param filter For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;status&#x60;: &#x60;equals&#x60;* @param pageCursor For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#pagination
     */
    getBulkDeleteVariantsJobs(options?: {
        fieldsCatalogVariantBulkDeleteJob?: Array<'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'errors' | 'expires_at'>;
        filter?: string;
        pageCursor?: string;
    }): Promise<{
        response: AxiosResponse;
        body: GetCatalogVariantDeleteJobResponseCollection;
    }>;
    /**
     * Get a catalog item bulk update job with the given job ID.  An `include` parameter can be provided to get the following related resource data: `items`.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `catalogs:read`
     * @summary Get Bulk Update Catalog Items Job
     * @param jobId ID of the job to retrieve.
     * @param fieldsCatalogItemBulkUpdateJob For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#sparse-fieldsets* @param fieldsCatalogItem For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#sparse-fieldsets* @param include For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#relationships
     */
    getBulkUpdateCatalogItemsJob(jobId: string, options?: {
        fieldsCatalogItemBulkUpdateJob?: Array<'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'errors' | 'expires_at'>;
        fieldsCatalogItem?: Array<'external_id' | 'title' | 'description' | 'price' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>;
        include?: Array<'items'>;
    }): Promise<{
        response: AxiosResponse;
        body: GetCatalogItemUpdateJobResponseCompoundDocument;
    }>;
    /**
     * Get all catalog item bulk update jobs.  Returns a maximum of 100 jobs per request.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `catalogs:read`
     * @summary Get Bulk Update Catalog Items Jobs
     
     * @param fieldsCatalogItemBulkUpdateJob For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#sparse-fieldsets* @param filter For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;status&#x60;: &#x60;equals&#x60;* @param pageCursor For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#pagination
     */
    getBulkUpdateCatalogItemsJobs(options?: {
        fieldsCatalogItemBulkUpdateJob?: Array<'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'errors' | 'expires_at'>;
        filter?: string;
        pageCursor?: string;
    }): Promise<{
        response: AxiosResponse;
        body: GetCatalogItemUpdateJobResponseCollectionCompoundDocument;
    }>;
    /**
     * Get a catalog category bulk update job with the given job ID.  An `include` parameter can be provided to get the following related resource data: `categories`.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `catalogs:read`
     * @summary Get Bulk Update Categories Job
     * @param jobId ID of the job to retrieve.
     * @param fieldsCatalogCategoryBulkUpdateJob For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#sparse-fieldsets* @param fieldsCatalogCategory For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#sparse-fieldsets* @param include For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#relationships
     */
    getBulkUpdateCategoriesJob(jobId: string, options?: {
        fieldsCatalogCategoryBulkUpdateJob?: Array<'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'errors' | 'expires_at'>;
        fieldsCatalogCategory?: Array<'external_id' | 'name' | 'updated'>;
        include?: Array<'categories'>;
    }): Promise<{
        response: AxiosResponse;
        body: GetCatalogCategoryUpdateJobResponseCompoundDocument;
    }>;
    /**
     * Get all catalog category bulk update jobs.  Returns a maximum of 100 jobs per request.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `catalogs:read`
     * @summary Get Bulk Update Categories Jobs
     
     * @param fieldsCatalogCategoryBulkUpdateJob For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#sparse-fieldsets* @param filter For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;status&#x60;: &#x60;equals&#x60;* @param pageCursor For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#pagination
     */
    getBulkUpdateCategoriesJobs(options?: {
        fieldsCatalogCategoryBulkUpdateJob?: Array<'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'errors' | 'expires_at'>;
        filter?: string;
        pageCursor?: string;
    }): Promise<{
        response: AxiosResponse;
        body: GetCatalogCategoryUpdateJobResponseCollectionCompoundDocument;
    }>;
    /**
     * Get a catalog variate bulk update job with the given job ID.  An `include` parameter can be provided to get the following related resource data: `variants`.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `catalogs:read`
     * @summary Get Bulk Update Variants Job
     * @param jobId ID of the job to retrieve.
     * @param fieldsCatalogVariantBulkUpdateJob For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#sparse-fieldsets* @param fieldsCatalogVariant For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#sparse-fieldsets* @param include For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#relationships
     */
    getBulkUpdateVariantsJob(jobId: string, options?: {
        fieldsCatalogVariantBulkUpdateJob?: Array<'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'errors' | 'expires_at'>;
        fieldsCatalogVariant?: Array<'external_id' | 'title' | 'description' | 'sku' | 'inventory_policy' | 'inventory_quantity' | 'price' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>;
        include?: Array<'variants'>;
    }): Promise<{
        response: AxiosResponse;
        body: GetCatalogVariantUpdateJobResponseCompoundDocument;
    }>;
    /**
     * Get all catalog variant bulk update jobs.  Returns a maximum of 100 jobs per request.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `catalogs:read`
     * @summary Get Bulk Update Variants Jobs
     
     * @param fieldsCatalogVariantBulkUpdateJob For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#sparse-fieldsets* @param filter For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;status&#x60;: &#x60;equals&#x60;* @param pageCursor For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#pagination
     */
    getBulkUpdateVariantsJobs(options?: {
        fieldsCatalogVariantBulkUpdateJob?: Array<'status' | 'created_at' | 'total_count' | 'completed_count' | 'failed_count' | 'completed_at' | 'errors' | 'expires_at'>;
        filter?: string;
        pageCursor?: string;
    }): Promise<{
        response: AxiosResponse;
        body: GetCatalogVariantUpdateJobResponseCollectionCompoundDocument;
    }>;
    /**
     * Get all catalog categories in an account.  Catalog categories can be sorted by the following fields, in ascending and descending order: `created`  Currently, the only supported integration type is `$custom`, and the only supported catalog type is `$default`.  Returns a maximum of 100 categories per request.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `catalogs:read`
     * @summary Get Catalog Categories
     
     * @param fieldsCatalogCategory For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#sparse-fieldsets* @param filter For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;ids&#x60;: &#x60;any&#x60;&lt;br&gt;&#x60;item.id&#x60;: &#x60;equals&#x60;&lt;br&gt;&#x60;name&#x60;: &#x60;contains&#x60;* @param pageCursor For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#pagination* @param sort For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#sorting
     */
    getCatalogCategories(options?: {
        fieldsCatalogCategory?: Array<'external_id' | 'name' | 'updated'>;
        filter?: string;
        pageCursor?: string;
        sort?: 'created' | '-created';
    }): Promise<{
        response: AxiosResponse;
        body: GetCatalogCategoryResponseCollection;
    }>;
    /**
     * Get a catalog category with the given category ID.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `catalogs:read`
     * @summary Get Catalog Category
     * @param id The catalog category ID is a compound ID (string), with format: &#x60;{integration}:::{catalog}:::{external_id}&#x60;. Currently, the only supported integration type is &#x60;$custom&#x60;, and the only supported catalog is &#x60;$default&#x60;.
     * @param fieldsCatalogCategory For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#sparse-fieldsets
     */
    getCatalogCategory(id: string, options?: {
        fieldsCatalogCategory?: Array<'external_id' | 'name' | 'updated'>;
    }): Promise<{
        response: AxiosResponse;
        body: GetCatalogCategoryResponse;
    }>;
    /**
     * Get a specific catalog item with the given item ID.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `catalogs:read`
     * @summary Get Catalog Item
     * @param id The catalog item ID is a compound ID (string), with format: &#x60;{integration}:::{catalog}:::{external_id}&#x60;. Currently, the only supported integration type is &#x60;$custom&#x60;, and the only supported catalog is &#x60;$default&#x60;.
     * @param fieldsCatalogItem For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#sparse-fieldsets* @param fieldsCatalogVariant For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#sparse-fieldsets* @param include For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#relationships
     */
    getCatalogItem(id: string, options?: {
        fieldsCatalogItem?: Array<'external_id' | 'title' | 'description' | 'price' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>;
        fieldsCatalogVariant?: Array<'external_id' | 'title' | 'description' | 'sku' | 'inventory_policy' | 'inventory_quantity' | 'price' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>;
        include?: Array<'variants'>;
    }): Promise<{
        response: AxiosResponse;
        body: GetCatalogItemResponseCompoundDocument;
    }>;
    /**
     * Get all catalog items in an account.  Catalog items can be sorted by the following fields, in ascending and descending order: `created`  Currently, the only supported integration type is `$custom`, and the only supported catalog type is `$default`.  Returns a maximum of 100 items per request.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `catalogs:read`
     * @summary Get Catalog Items
     
     * @param fieldsCatalogItem For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#sparse-fieldsets* @param fieldsCatalogVariant For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#sparse-fieldsets* @param filter For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;ids&#x60;: &#x60;any&#x60;&lt;br&gt;&#x60;category.id&#x60;: &#x60;equals&#x60;&lt;br&gt;&#x60;title&#x60;: &#x60;contains&#x60;&lt;br&gt;&#x60;published&#x60;: &#x60;equals&#x60;* @param include For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#relationships* @param pageCursor For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#pagination* @param sort For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#sorting
     */
    getCatalogItems(options?: {
        fieldsCatalogItem?: Array<'external_id' | 'title' | 'description' | 'price' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>;
        fieldsCatalogVariant?: Array<'external_id' | 'title' | 'description' | 'sku' | 'inventory_policy' | 'inventory_quantity' | 'price' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>;
        filter?: string;
        include?: Array<'variants'>;
        pageCursor?: string;
        sort?: 'created' | '-created';
    }): Promise<{
        response: AxiosResponse;
        body: GetCatalogItemResponseCollectionCompoundDocument;
    }>;
    /**
     * Get a catalog item variant with the given variant ID.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `catalogs:read`
     * @summary Get Catalog Variant
     * @param id The catalog variant ID is a compound ID (string), with format: &#x60;{integration}:::{catalog}:::{external_id}&#x60;. Currently, the only supported integration type is &#x60;$custom&#x60;, and the only supported catalog is &#x60;$default&#x60;.
     * @param fieldsCatalogVariant For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#sparse-fieldsets
     */
    getCatalogVariant(id: string, options?: {
        fieldsCatalogVariant?: Array<'external_id' | 'title' | 'description' | 'sku' | 'inventory_policy' | 'inventory_quantity' | 'price' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>;
    }): Promise<{
        response: AxiosResponse;
        body: GetCatalogVariantResponse;
    }>;
    /**
     * Get all variants in an account.  Variants can be sorted by the following fields, in ascending and descending order: `created`  Currently, the only supported integration type is `$custom`, and the only supported catalog type is `$default`.  Returns a maximum of 100 variants per request.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `catalogs:read`
     * @summary Get Catalog Variants
     
     * @param fieldsCatalogVariant For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#sparse-fieldsets* @param filter For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;ids&#x60;: &#x60;any&#x60;&lt;br&gt;&#x60;item.id&#x60;: &#x60;equals&#x60;&lt;br&gt;&#x60;sku&#x60;: &#x60;equals&#x60;&lt;br&gt;&#x60;title&#x60;: &#x60;contains&#x60;&lt;br&gt;&#x60;published&#x60;: &#x60;equals&#x60;* @param pageCursor For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#pagination* @param sort For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#sorting
     */
    getCatalogVariants(options?: {
        fieldsCatalogVariant?: Array<'external_id' | 'title' | 'description' | 'sku' | 'inventory_policy' | 'inventory_quantity' | 'price' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>;
        filter?: string;
        pageCursor?: string;
        sort?: 'created' | '-created';
    }): Promise<{
        response: AxiosResponse;
        body: GetCatalogVariantResponseCollection;
    }>;
    /**
     * Get all catalog categories that an item with the given item ID is in.  Catalog categories can be sorted by the following fields, in ascending and descending order: `created`  Returns a maximum of 100 categories per request.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `catalogs:read`
     * @summary Get Categories for Catalog Item
     * @param id The catalog item ID is a compound ID (string), with format: &#x60;{integration}:::{catalog}:::{external_id}&#x60;. Currently, the only supported integration type is &#x60;$custom&#x60;, and the only supported catalog is &#x60;$default&#x60;.
     * @param fieldsCatalogCategory For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#sparse-fieldsets* @param filter For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;ids&#x60;: &#x60;any&#x60;&lt;br&gt;&#x60;item.id&#x60;: &#x60;equals&#x60;&lt;br&gt;&#x60;name&#x60;: &#x60;contains&#x60;* @param pageCursor For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#pagination* @param sort For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#sorting
     */
    getCategoriesForCatalogItem(id: string, options?: {
        fieldsCatalogCategory?: Array<'external_id' | 'name' | 'updated'>;
        filter?: string;
        pageCursor?: string;
        sort?: 'created' | '-created';
    }): Promise<{
        response: AxiosResponse;
        body: GetCatalogCategoryResponseCollection;
    }>;
    /**
     * Get all catalog categories that a particular item is in. Returns a maximum of 100 categories per request.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `catalogs:read`
     * @summary Get Category IDs for Catalog Item
     * @param id The catalog item ID is a compound ID (string), with format: &#x60;{integration}:::{catalog}:::{external_id}&#x60;. Currently, the only supported integration type is &#x60;$custom&#x60;, and the only supported catalog is &#x60;$default&#x60;.
     * @param filter For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;ids&#x60;: &#x60;any&#x60;&lt;br&gt;&#x60;item.id&#x60;: &#x60;equals&#x60;&lt;br&gt;&#x60;name&#x60;: &#x60;contains&#x60;* @param pageCursor For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#pagination* @param sort For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#sorting
     */
    getCategoryIdsForCatalogItem(id: string, options?: {
        filter?: string;
        pageCursor?: string;
        sort?: 'created' | '-created';
    }): Promise<{
        response: AxiosResponse;
        body: GetCatalogItemCategoriesRelationshipsResponseCollection;
    }>;
    /**
     * Get all items in the given category ID. Returns a maximum of 100 items per request.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `catalogs:read`
     * @summary Get Item IDs for Catalog Category
     * @param id The catalog category ID is a compound ID (string), with format: &#x60;{integration}:::{catalog}:::{external_id}&#x60;. Currently, the only supported integration type is &#x60;$custom&#x60;, and the only supported catalog is &#x60;$default&#x60;.
     * @param filter For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;ids&#x60;: &#x60;any&#x60;&lt;br&gt;&#x60;category.id&#x60;: &#x60;equals&#x60;&lt;br&gt;&#x60;title&#x60;: &#x60;contains&#x60;&lt;br&gt;&#x60;published&#x60;: &#x60;equals&#x60;* @param pageCursor For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#pagination* @param sort For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#sorting
     */
    getItemIdsForCatalogCategory(id: string, options?: {
        filter?: string;
        pageCursor?: string;
        sort?: 'created' | '-created';
    }): Promise<{
        response: AxiosResponse;
        body: GetCatalogCategoryItemsRelationshipsResponseCollection;
    }>;
    /**
     * Get all items in a category with the given category ID.  Items can be sorted by the following fields, in ascending and descending order: `created`  Returns a maximum of 100 items per request.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `catalogs:read`
     * @summary Get Items for Catalog Category
     * @param id The catalog category ID is a compound ID (string), with format: &#x60;{integration}:::{catalog}:::{external_id}&#x60;. Currently, the only supported integration type is &#x60;$custom&#x60;, and the only supported catalog is &#x60;$default&#x60;.
     * @param fieldsCatalogItem For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#sparse-fieldsets* @param fieldsCatalogVariant For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#sparse-fieldsets* @param filter For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;ids&#x60;: &#x60;any&#x60;&lt;br&gt;&#x60;category.id&#x60;: &#x60;equals&#x60;&lt;br&gt;&#x60;title&#x60;: &#x60;contains&#x60;&lt;br&gt;&#x60;published&#x60;: &#x60;equals&#x60;* @param include For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#relationships* @param pageCursor For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#pagination* @param sort For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#sorting
     */
    getItemsForCatalogCategory(id: string, options?: {
        fieldsCatalogItem?: Array<'external_id' | 'title' | 'description' | 'price' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>;
        fieldsCatalogVariant?: Array<'external_id' | 'title' | 'description' | 'sku' | 'inventory_policy' | 'inventory_quantity' | 'price' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>;
        filter?: string;
        include?: Array<'variants'>;
        pageCursor?: string;
        sort?: 'created' | '-created';
    }): Promise<{
        response: AxiosResponse;
        body: GetCatalogItemResponseCollectionCompoundDocument;
    }>;
    /**
     * Get all variants related to the given item ID.  Variants can be sorted by the following fields, in ascending and descending order: `created`  Returns a maximum of 100 variants per request.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `catalogs:read`
     * @summary Get Variant IDs for Catalog Item
     * @param id The catalog item ID is a compound ID (string), with format: &#x60;{integration}:::{catalog}:::{external_id}&#x60;. Currently, the only supported integration type is &#x60;$custom&#x60;, and the only supported catalog is &#x60;$default&#x60;.
     * @param filter For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;ids&#x60;: &#x60;any&#x60;&lt;br&gt;&#x60;item.id&#x60;: &#x60;equals&#x60;&lt;br&gt;&#x60;sku&#x60;: &#x60;equals&#x60;&lt;br&gt;&#x60;title&#x60;: &#x60;contains&#x60;&lt;br&gt;&#x60;published&#x60;: &#x60;equals&#x60;* @param pageCursor For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#pagination* @param sort For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#sorting
     */
    getVariantIdsForCatalogItem(id: string, options?: {
        filter?: string;
        pageCursor?: string;
        sort?: 'created' | '-created';
    }): Promise<{
        response: AxiosResponse;
        body: GetCatalogItemVariantsRelationshipsResponseCollection;
    }>;
    /**
     * Get all variants related to the given item ID.  Variants can be sorted by the following fields, in ascending and descending order: `created`  Returns a maximum of 100 variants per request.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `catalogs:read`
     * @summary Get Variants for Catalog Item
     * @param id The catalog item ID is a compound ID (string), with format: &#x60;{integration}:::{catalog}:::{external_id}&#x60;. Currently, the only supported integration type is &#x60;$custom&#x60;, and the only supported catalog is &#x60;$default&#x60;.
     * @param fieldsCatalogVariant For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#sparse-fieldsets* @param filter For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;ids&#x60;: &#x60;any&#x60;&lt;br&gt;&#x60;item.id&#x60;: &#x60;equals&#x60;&lt;br&gt;&#x60;sku&#x60;: &#x60;equals&#x60;&lt;br&gt;&#x60;title&#x60;: &#x60;contains&#x60;&lt;br&gt;&#x60;published&#x60;: &#x60;equals&#x60;* @param pageCursor For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#pagination* @param sort For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#sorting
     */
    getVariantsForCatalogItem(id: string, options?: {
        fieldsCatalogVariant?: Array<'external_id' | 'title' | 'description' | 'sku' | 'inventory_policy' | 'inventory_quantity' | 'price' | 'url' | 'image_full_url' | 'image_thumbnail_url' | 'images' | 'custom_metadata' | 'published' | 'created' | 'updated'>;
        filter?: string;
        pageCursor?: string;
        sort?: 'created' | '-created';
    }): Promise<{
        response: AxiosResponse;
        body: GetCatalogVariantResponseCollection;
    }>;
    /**
     * Delete catalog category relationships for the given item ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `catalogs:write`
     * @summary Remove Categories from Catalog Item
     * @param id The catalog item ID is a compound ID (string), with format: &#x60;{integration}:::{catalog}:::{external_id}&#x60;. Currently, the only supported integration type is &#x60;$custom&#x60;, and the only supported catalog is &#x60;$default&#x60;.* @param catalogItemCategoryOp
     
     */
    removeCategoriesFromCatalogItem(id: string, catalogItemCategoryOp: CatalogItemCategoryOp): Promise<{
        response: AxiosResponse;
        body?: any;
    }>;
    /**
     * Delete item relationships for the given category ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `catalogs:write`
     * @summary Remove Items from Catalog Category
     * @param id The catalog category ID is a compound ID (string), with format: &#x60;{integration}:::{catalog}:::{external_id}&#x60;. Currently, the only supported integration type is &#x60;$custom&#x60;, and the only supported catalog is &#x60;$default&#x60;.* @param catalogCategoryItemOp
     
     */
    removeItemsFromCatalogCategory(id: string, catalogCategoryItemOp: CatalogCategoryItemOp): Promise<{
        response: AxiosResponse;
        body?: any;
    }>;
    /**
     * Update a catalog category with the given category ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `catalogs:write`
     * @summary Update Catalog Category
     * @param id The catalog category ID is a compound ID (string), with format: &#x60;{integration}:::{catalog}:::{external_id}&#x60;. Currently, the only supported integration type is &#x60;$custom&#x60;, and the only supported catalog is &#x60;$default&#x60;.* @param catalogCategoryUpdateQuery
     
     */
    updateCatalogCategory(id: string, catalogCategoryUpdateQuery: CatalogCategoryUpdateQuery): Promise<{
        response: AxiosResponse;
        body: PatchCatalogCategoryResponse;
    }>;
    /**
     * Update a catalog item with the given item ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `catalogs:write`
     * @summary Update Catalog Item
     * @param id The catalog item ID is a compound ID (string), with format: &#x60;{integration}:::{catalog}:::{external_id}&#x60;. Currently, the only supported integration type is &#x60;$custom&#x60;, and the only supported catalog is &#x60;$default&#x60;.* @param catalogItemUpdateQuery
     
     */
    updateCatalogItem(id: string, catalogItemUpdateQuery: CatalogItemUpdateQuery): Promise<{
        response: AxiosResponse;
        body: PatchCatalogItemResponse;
    }>;
    /**
     * Update a catalog item variant with the given variant ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `catalogs:write`
     * @summary Update Catalog Variant
     * @param id The catalog variant ID is a compound ID (string), with format: &#x60;{integration}:::{catalog}:::{external_id}&#x60;. Currently, the only supported integration type is &#x60;$custom&#x60;, and the only supported catalog is &#x60;$default&#x60;.* @param catalogVariantUpdateQuery
     
     */
    updateCatalogVariant(id: string, catalogVariantUpdateQuery: CatalogVariantUpdateQuery): Promise<{
        response: AxiosResponse;
        body: PatchCatalogVariantResponse;
    }>;
    /**
     * Update catalog category relationships for the given item ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `catalogs:write`
     * @summary Update Categories for Catalog Item
     * @param id The catalog item ID is a compound ID (string), with format: &#x60;{integration}:::{catalog}:::{external_id}&#x60;. Currently, the only supported integration type is &#x60;$custom&#x60;, and the only supported catalog is &#x60;$default&#x60;.* @param catalogItemCategoryOp
     
     */
    updateCategoriesForCatalogItem(id: string, catalogItemCategoryOp: CatalogItemCategoryOp): Promise<{
        response: AxiosResponse;
        body?: any;
    }>;
    /**
     * Update item relationships for the given category ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `catalogs:write`
     * @summary Update Items for Catalog Category
     * @param id The catalog category ID is a compound ID (string), with format: &#x60;{integration}:::{catalog}:::{external_id}&#x60;. Currently, the only supported integration type is &#x60;$custom&#x60;, and the only supported catalog is &#x60;$default&#x60;.* @param catalogCategoryItemOp
     
     */
    updateItemsForCatalogCategory(id: string, catalogCategoryItemOp: CatalogCategoryItemOp): Promise<{
        response: AxiosResponse;
        body?: any;
    }>;
}
export interface CatalogsApi {
    /**
     * Alias of {@link CatalogsApi.addCategoriesToCatalogItem}
     *
     * @deprecated Use {@link CatalogsApi.addCategoriesToCatalogItem} instead
     */
    addCategoryToCatalogItem: typeof CatalogsApi.prototype.addCategoriesToCatalogItem;
}
export interface CatalogsApi {
    /**
     * Alias of {@link CatalogsApi.addCategoriesToCatalogItem}
     *
     * @deprecated Use {@link CatalogsApi.addCategoriesToCatalogItem} instead
     */
    createCatalogItemRelationshipsCategory: typeof CatalogsApi.prototype.addCategoriesToCatalogItem;
}
export interface CatalogsApi {
    /**
     * Alias of {@link CatalogsApi.addCategoriesToCatalogItem}
     *
     * @deprecated Use {@link CatalogsApi.addCategoriesToCatalogItem} instead
     */
    createCatalogItemRelationshipsCategories: typeof CatalogsApi.prototype.addCategoriesToCatalogItem;
}
export interface CatalogsApi {
    /**
     * Alias of {@link CatalogsApi.addItemsToCatalogCategory}
     *
     * @deprecated Use {@link CatalogsApi.addItemsToCatalogCategory} instead
     */
    createCatalogCategoryRelationshipsItem: typeof CatalogsApi.prototype.addItemsToCatalogCategory;
}
export interface CatalogsApi {
    /**
     * Alias of {@link CatalogsApi.addItemsToCatalogCategory}
     *
     * @deprecated Use {@link CatalogsApi.addItemsToCatalogCategory} instead
     */
    createCatalogCategoryRelationshipsItems: typeof CatalogsApi.prototype.addItemsToCatalogCategory;
}
export interface CatalogsApi {
    /**
     * Alias of {@link CatalogsApi.bulkCreateCatalogCategories}
     *
     * @deprecated Use {@link CatalogsApi.bulkCreateCatalogCategories} instead
     */
    spawnCreateCategoriesJob: typeof CatalogsApi.prototype.bulkCreateCatalogCategories;
}
export interface CatalogsApi {
    /**
     * Alias of {@link CatalogsApi.bulkCreateCatalogCategories}
     *
     * @deprecated Use {@link CatalogsApi.bulkCreateCatalogCategories} instead
     */
    createCatalogCategoryBulkCreateJob: typeof CatalogsApi.prototype.bulkCreateCatalogCategories;
}
export interface CatalogsApi {
    /**
     * Alias of {@link CatalogsApi.bulkCreateCatalogItems}
     *
     * @deprecated Use {@link CatalogsApi.bulkCreateCatalogItems} instead
     */
    spawnCreateItemsJob: typeof CatalogsApi.prototype.bulkCreateCatalogItems;
}
export interface CatalogsApi {
    /**
     * Alias of {@link CatalogsApi.bulkCreateCatalogItems}
     *
     * @deprecated Use {@link CatalogsApi.bulkCreateCatalogItems} instead
     */
    createCatalogItemBulkCreateJob: typeof CatalogsApi.prototype.bulkCreateCatalogItems;
}
export interface CatalogsApi {
    /**
     * Alias of {@link CatalogsApi.bulkCreateCatalogVariants}
     *
     * @deprecated Use {@link CatalogsApi.bulkCreateCatalogVariants} instead
     */
    spawnCreateVariantsJob: typeof CatalogsApi.prototype.bulkCreateCatalogVariants;
}
export interface CatalogsApi {
    /**
     * Alias of {@link CatalogsApi.bulkCreateCatalogVariants}
     *
     * @deprecated Use {@link CatalogsApi.bulkCreateCatalogVariants} instead
     */
    createCatalogVariantBulkCreateJob: typeof CatalogsApi.prototype.bulkCreateCatalogVariants;
}
export interface CatalogsApi {
    /**
     * Alias of {@link CatalogsApi.bulkDeleteCatalogCategories}
     *
     * @deprecated Use {@link CatalogsApi.bulkDeleteCatalogCategories} instead
     */
    spawnDeleteCategoriesJob: typeof CatalogsApi.prototype.bulkDeleteCatalogCategories;
}
export interface CatalogsApi {
    /**
     * Alias of {@link CatalogsApi.bulkDeleteCatalogCategories}
     *
     * @deprecated Use {@link CatalogsApi.bulkDeleteCatalogCategories} instead
     */
    createCatalogCategoryBulkDeleteJob: typeof CatalogsApi.prototype.bulkDeleteCatalogCategories;
}
export interface CatalogsApi {
    /**
     * Alias of {@link CatalogsApi.bulkDeleteCatalogItems}
     *
     * @deprecated Use {@link CatalogsApi.bulkDeleteCatalogItems} instead
     */
    spawnDeleteItemsJob: typeof CatalogsApi.prototype.bulkDeleteCatalogItems;
}
export interface CatalogsApi {
    /**
     * Alias of {@link CatalogsApi.bulkDeleteCatalogItems}
     *
     * @deprecated Use {@link CatalogsApi.bulkDeleteCatalogItems} instead
     */
    createCatalogItemBulkDeleteJob: typeof CatalogsApi.prototype.bulkDeleteCatalogItems;
}
export interface CatalogsApi {
    /**
     * Alias of {@link CatalogsApi.bulkDeleteCatalogVariants}
     *
     * @deprecated Use {@link CatalogsApi.bulkDeleteCatalogVariants} instead
     */
    spawnDeleteVariantsJob: typeof CatalogsApi.prototype.bulkDeleteCatalogVariants;
}
export interface CatalogsApi {
    /**
     * Alias of {@link CatalogsApi.bulkDeleteCatalogVariants}
     *
     * @deprecated Use {@link CatalogsApi.bulkDeleteCatalogVariants} instead
     */
    createCatalogVariantBulkDeleteJob: typeof CatalogsApi.prototype.bulkDeleteCatalogVariants;
}
export interface CatalogsApi {
    /**
     * Alias of {@link CatalogsApi.bulkUpdateCatalogCategories}
     *
     * @deprecated Use {@link CatalogsApi.bulkUpdateCatalogCategories} instead
     */
    spawnUpdateCategoriesJob: typeof CatalogsApi.prototype.bulkUpdateCatalogCategories;
}
export interface CatalogsApi {
    /**
     * Alias of {@link CatalogsApi.bulkUpdateCatalogCategories}
     *
     * @deprecated Use {@link CatalogsApi.bulkUpdateCatalogCategories} instead
     */
    createCatalogCategoryBulkUpdateJob: typeof CatalogsApi.prototype.bulkUpdateCatalogCategories;
}
export interface CatalogsApi {
    /**
     * Alias of {@link CatalogsApi.bulkUpdateCatalogItems}
     *
     * @deprecated Use {@link CatalogsApi.bulkUpdateCatalogItems} instead
     */
    spawnUpdateItemsJob: typeof CatalogsApi.prototype.bulkUpdateCatalogItems;
}
export interface CatalogsApi {
    /**
     * Alias of {@link CatalogsApi.bulkUpdateCatalogItems}
     *
     * @deprecated Use {@link CatalogsApi.bulkUpdateCatalogItems} instead
     */
    createCatalogItemBulkUpdateJob: typeof CatalogsApi.prototype.bulkUpdateCatalogItems;
}
export interface CatalogsApi {
    /**
     * Alias of {@link CatalogsApi.bulkUpdateCatalogVariants}
     *
     * @deprecated Use {@link CatalogsApi.bulkUpdateCatalogVariants} instead
     */
    spawnUpdateVariantsJob: typeof CatalogsApi.prototype.bulkUpdateCatalogVariants;
}
export interface CatalogsApi {
    /**
     * Alias of {@link CatalogsApi.bulkUpdateCatalogVariants}
     *
     * @deprecated Use {@link CatalogsApi.bulkUpdateCatalogVariants} instead
     */
    createCatalogVariantBulkUpdateJob: typeof CatalogsApi.prototype.bulkUpdateCatalogVariants;
}
export interface CatalogsApi {
    /**
     * Alias of {@link CatalogsApi.getBulkCreateCatalogItemsJob}
     *
     * @deprecated Use {@link CatalogsApi.getBulkCreateCatalogItemsJob} instead
     */
    getCreateItemsJob: typeof CatalogsApi.prototype.getBulkCreateCatalogItemsJob;
}
export interface CatalogsApi {
    /**
     * Alias of {@link CatalogsApi.getBulkCreateCatalogItemsJob}
     *
     * @deprecated Use {@link CatalogsApi.getBulkCreateCatalogItemsJob} instead
     */
    getCatalogItemBulkCreateJob: typeof CatalogsApi.prototype.getBulkCreateCatalogItemsJob;
}
export interface CatalogsApi {
    /**
     * Alias of {@link CatalogsApi.getBulkCreateCatalogItemsJobs}
     *
     * @deprecated Use {@link CatalogsApi.getBulkCreateCatalogItemsJobs} instead
     */
    getCreateItemsJobs: typeof CatalogsApi.prototype.getBulkCreateCatalogItemsJobs;
}
export interface CatalogsApi {
    /**
     * Alias of {@link CatalogsApi.getBulkCreateCatalogItemsJobs}
     *
     * @deprecated Use {@link CatalogsApi.getBulkCreateCatalogItemsJobs} instead
     */
    getCatalogItemBulkCreateJobs: typeof CatalogsApi.prototype.getBulkCreateCatalogItemsJobs;
}
export interface CatalogsApi {
    /**
     * Alias of {@link CatalogsApi.getBulkCreateCategoriesJob}
     *
     * @deprecated Use {@link CatalogsApi.getBulkCreateCategoriesJob} instead
     */
    getCreateCategoriesJob: typeof CatalogsApi.prototype.getBulkCreateCategoriesJob;
}
export interface CatalogsApi {
    /**
     * Alias of {@link CatalogsApi.getBulkCreateCategoriesJob}
     *
     * @deprecated Use {@link CatalogsApi.getBulkCreateCategoriesJob} instead
     */
    getCatalogCategoryBulkCreateJob: typeof CatalogsApi.prototype.getBulkCreateCategoriesJob;
}
export interface CatalogsApi {
    /**
     * Alias of {@link CatalogsApi.getBulkCreateCategoriesJobs}
     *
     * @deprecated Use {@link CatalogsApi.getBulkCreateCategoriesJobs} instead
     */
    getCreateCategoriesJobs: typeof CatalogsApi.prototype.getBulkCreateCategoriesJobs;
}
export interface CatalogsApi {
    /**
     * Alias of {@link CatalogsApi.getBulkCreateCategoriesJobs}
     *
     * @deprecated Use {@link CatalogsApi.getBulkCreateCategoriesJobs} instead
     */
    getCatalogCategoryBulkCreateJobs: typeof CatalogsApi.prototype.getBulkCreateCategoriesJobs;
}
export interface CatalogsApi {
    /**
     * Alias of {@link CatalogsApi.getBulkCreateVariantsJob}
     *
     * @deprecated Use {@link CatalogsApi.getBulkCreateVariantsJob} instead
     */
    getCreateVariantsJob: typeof CatalogsApi.prototype.getBulkCreateVariantsJob;
}
export interface CatalogsApi {
    /**
     * Alias of {@link CatalogsApi.getBulkCreateVariantsJob}
     *
     * @deprecated Use {@link CatalogsApi.getBulkCreateVariantsJob} instead
     */
    getCatalogVariantBulkCreateJob: typeof CatalogsApi.prototype.getBulkCreateVariantsJob;
}
export interface CatalogsApi {
    /**
     * Alias of {@link CatalogsApi.getBulkCreateVariantsJobs}
     *
     * @deprecated Use {@link CatalogsApi.getBulkCreateVariantsJobs} instead
     */
    getCreateVariantsJobs: typeof CatalogsApi.prototype.getBulkCreateVariantsJobs;
}
export interface CatalogsApi {
    /**
     * Alias of {@link CatalogsApi.getBulkCreateVariantsJobs}
     *
     * @deprecated Use {@link CatalogsApi.getBulkCreateVariantsJobs} instead
     */
    getCatalogVariantBulkCreateJobs: typeof CatalogsApi.prototype.getBulkCreateVariantsJobs;
}
export interface CatalogsApi {
    /**
     * Alias of {@link CatalogsApi.getBulkDeleteCatalogItemsJob}
     *
     * @deprecated Use {@link CatalogsApi.getBulkDeleteCatalogItemsJob} instead
     */
    getDeleteItemsJob: typeof CatalogsApi.prototype.getBulkDeleteCatalogItemsJob;
}
export interface CatalogsApi {
    /**
     * Alias of {@link CatalogsApi.getBulkDeleteCatalogItemsJob}
     *
     * @deprecated Use {@link CatalogsApi.getBulkDeleteCatalogItemsJob} instead
     */
    getCatalogItemBulkDeleteJob: typeof CatalogsApi.prototype.getBulkDeleteCatalogItemsJob;
}
export interface CatalogsApi {
    /**
     * Alias of {@link CatalogsApi.getBulkDeleteCatalogItemsJobs}
     *
     * @deprecated Use {@link CatalogsApi.getBulkDeleteCatalogItemsJobs} instead
     */
    getDeleteItemsJobs: typeof CatalogsApi.prototype.getBulkDeleteCatalogItemsJobs;
}
export interface CatalogsApi {
    /**
     * Alias of {@link CatalogsApi.getBulkDeleteCatalogItemsJobs}
     *
     * @deprecated Use {@link CatalogsApi.getBulkDeleteCatalogItemsJobs} instead
     */
    getCatalogItemBulkDeleteJobs: typeof CatalogsApi.prototype.getBulkDeleteCatalogItemsJobs;
}
export interface CatalogsApi {
    /**
     * Alias of {@link CatalogsApi.getBulkDeleteCategoriesJob}
     *
     * @deprecated Use {@link CatalogsApi.getBulkDeleteCategoriesJob} instead
     */
    getDeleteCategoriesJob: typeof CatalogsApi.prototype.getBulkDeleteCategoriesJob;
}
export interface CatalogsApi {
    /**
     * Alias of {@link CatalogsApi.getBulkDeleteCategoriesJob}
     *
     * @deprecated Use {@link CatalogsApi.getBulkDeleteCategoriesJob} instead
     */
    getCatalogCategoryBulkDeleteJob: typeof CatalogsApi.prototype.getBulkDeleteCategoriesJob;
}
export interface CatalogsApi {
    /**
     * Alias of {@link CatalogsApi.getBulkDeleteCategoriesJobs}
     *
     * @deprecated Use {@link CatalogsApi.getBulkDeleteCategoriesJobs} instead
     */
    getDeleteCategoriesJobs: typeof CatalogsApi.prototype.getBulkDeleteCategoriesJobs;
}
export interface CatalogsApi {
    /**
     * Alias of {@link CatalogsApi.getBulkDeleteCategoriesJobs}
     *
     * @deprecated Use {@link CatalogsApi.getBulkDeleteCategoriesJobs} instead
     */
    getCatalogCategoryBulkDeleteJobs: typeof CatalogsApi.prototype.getBulkDeleteCategoriesJobs;
}
export interface CatalogsApi {
    /**
     * Alias of {@link CatalogsApi.getBulkDeleteVariantsJob}
     *
     * @deprecated Use {@link CatalogsApi.getBulkDeleteVariantsJob} instead
     */
    getDeleteVariantsJob: typeof CatalogsApi.prototype.getBulkDeleteVariantsJob;
}
export interface CatalogsApi {
    /**
     * Alias of {@link CatalogsApi.getBulkDeleteVariantsJob}
     *
     * @deprecated Use {@link CatalogsApi.getBulkDeleteVariantsJob} instead
     */
    getCatalogVariantBulkDeleteJob: typeof CatalogsApi.prototype.getBulkDeleteVariantsJob;
}
export interface CatalogsApi {
    /**
     * Alias of {@link CatalogsApi.getBulkDeleteVariantsJobs}
     *
     * @deprecated Use {@link CatalogsApi.getBulkDeleteVariantsJobs} instead
     */
    getDeleteVariantsJobs: typeof CatalogsApi.prototype.getBulkDeleteVariantsJobs;
}
export interface CatalogsApi {
    /**
     * Alias of {@link CatalogsApi.getBulkDeleteVariantsJobs}
     *
     * @deprecated Use {@link CatalogsApi.getBulkDeleteVariantsJobs} instead
     */
    getCatalogVariantBulkDeleteJobs: typeof CatalogsApi.prototype.getBulkDeleteVariantsJobs;
}
export interface CatalogsApi {
    /**
     * Alias of {@link CatalogsApi.getBulkUpdateCatalogItemsJob}
     *
     * @deprecated Use {@link CatalogsApi.getBulkUpdateCatalogItemsJob} instead
     */
    getUpdateItemsJob: typeof CatalogsApi.prototype.getBulkUpdateCatalogItemsJob;
}
export interface CatalogsApi {
    /**
     * Alias of {@link CatalogsApi.getBulkUpdateCatalogItemsJob}
     *
     * @deprecated Use {@link CatalogsApi.getBulkUpdateCatalogItemsJob} instead
     */
    getCatalogItemBulkUpdateJob: typeof CatalogsApi.prototype.getBulkUpdateCatalogItemsJob;
}
export interface CatalogsApi {
    /**
     * Alias of {@link CatalogsApi.getBulkUpdateCatalogItemsJobs}
     *
     * @deprecated Use {@link CatalogsApi.getBulkUpdateCatalogItemsJobs} instead
     */
    getUpdateItemsJobs: typeof CatalogsApi.prototype.getBulkUpdateCatalogItemsJobs;
}
export interface CatalogsApi {
    /**
     * Alias of {@link CatalogsApi.getBulkUpdateCatalogItemsJobs}
     *
     * @deprecated Use {@link CatalogsApi.getBulkUpdateCatalogItemsJobs} instead
     */
    getCatalogItemBulkUpdateJobs: typeof CatalogsApi.prototype.getBulkUpdateCatalogItemsJobs;
}
export interface CatalogsApi {
    /**
     * Alias of {@link CatalogsApi.getBulkUpdateCategoriesJob}
     *
     * @deprecated Use {@link CatalogsApi.getBulkUpdateCategoriesJob} instead
     */
    getUpdateCategoriesJob: typeof CatalogsApi.prototype.getBulkUpdateCategoriesJob;
}
export interface CatalogsApi {
    /**
     * Alias of {@link CatalogsApi.getBulkUpdateCategoriesJob}
     *
     * @deprecated Use {@link CatalogsApi.getBulkUpdateCategoriesJob} instead
     */
    getCatalogCategoryBulkUpdateJob: typeof CatalogsApi.prototype.getBulkUpdateCategoriesJob;
}
export interface CatalogsApi {
    /**
     * Alias of {@link CatalogsApi.getBulkUpdateCategoriesJobs}
     *
     * @deprecated Use {@link CatalogsApi.getBulkUpdateCategoriesJobs} instead
     */
    getUpdateCategoriesJobs: typeof CatalogsApi.prototype.getBulkUpdateCategoriesJobs;
}
export interface CatalogsApi {
    /**
     * Alias of {@link CatalogsApi.getBulkUpdateCategoriesJobs}
     *
     * @deprecated Use {@link CatalogsApi.getBulkUpdateCategoriesJobs} instead
     */
    getCatalogCategoryBulkUpdateJobs: typeof CatalogsApi.prototype.getBulkUpdateCategoriesJobs;
}
export interface CatalogsApi {
    /**
     * Alias of {@link CatalogsApi.getBulkUpdateVariantsJob}
     *
     * @deprecated Use {@link CatalogsApi.getBulkUpdateVariantsJob} instead
     */
    getUpdateVariantsJob: typeof CatalogsApi.prototype.getBulkUpdateVariantsJob;
}
export interface CatalogsApi {
    /**
     * Alias of {@link CatalogsApi.getBulkUpdateVariantsJob}
     *
     * @deprecated Use {@link CatalogsApi.getBulkUpdateVariantsJob} instead
     */
    getCatalogVariantBulkUpdateJob: typeof CatalogsApi.prototype.getBulkUpdateVariantsJob;
}
export interface CatalogsApi {
    /**
     * Alias of {@link CatalogsApi.getBulkUpdateVariantsJobs}
     *
     * @deprecated Use {@link CatalogsApi.getBulkUpdateVariantsJobs} instead
     */
    getUpdateVariantsJobs: typeof CatalogsApi.prototype.getBulkUpdateVariantsJobs;
}
export interface CatalogsApi {
    /**
     * Alias of {@link CatalogsApi.getBulkUpdateVariantsJobs}
     *
     * @deprecated Use {@link CatalogsApi.getBulkUpdateVariantsJobs} instead
     */
    getCatalogVariantBulkUpdateJobs: typeof CatalogsApi.prototype.getBulkUpdateVariantsJobs;
}
export interface CatalogsApi {
    /**
     * Alias of {@link CatalogsApi.getCategoriesForCatalogItem}
     *
     * @deprecated Use {@link CatalogsApi.getCategoriesForCatalogItem} instead
     */
    getCatalogItemCategories: typeof CatalogsApi.prototype.getCategoriesForCatalogItem;
}
export interface CatalogsApi {
    /**
     * Alias of {@link CatalogsApi.getCategoryIdsForCatalogItem}
     *
     * @deprecated Use {@link CatalogsApi.getCategoryIdsForCatalogItem} instead
     */
    getCatalogItemRelationshipsCategories: typeof CatalogsApi.prototype.getCategoryIdsForCatalogItem;
}
export interface CatalogsApi {
    /**
     * Alias of {@link CatalogsApi.getItemIdsForCatalogCategory}
     *
     * @deprecated Use {@link CatalogsApi.getItemIdsForCatalogCategory} instead
     */
    getCatalogCategoryRelationshipsItems: typeof CatalogsApi.prototype.getItemIdsForCatalogCategory;
}
export interface CatalogsApi {
    /**
     * Alias of {@link CatalogsApi.getItemsForCatalogCategory}
     *
     * @deprecated Use {@link CatalogsApi.getItemsForCatalogCategory} instead
     */
    getCatalogCategoryItems: typeof CatalogsApi.prototype.getItemsForCatalogCategory;
}
export interface CatalogsApi {
    /**
     * Alias of {@link CatalogsApi.getVariantIdsForCatalogItem}
     *
     * @deprecated Use {@link CatalogsApi.getVariantIdsForCatalogItem} instead
     */
    getCatalogItemRelationshipsVariants: typeof CatalogsApi.prototype.getVariantIdsForCatalogItem;
}
export interface CatalogsApi {
    /**
     * Alias of {@link CatalogsApi.getVariantsForCatalogItem}
     *
     * @deprecated Use {@link CatalogsApi.getVariantsForCatalogItem} instead
     */
    getCatalogItemVariants: typeof CatalogsApi.prototype.getVariantsForCatalogItem;
}
export interface CatalogsApi {
    /**
     * Alias of {@link CatalogsApi.removeCategoriesFromCatalogItem}
     *
     * @deprecated Use {@link CatalogsApi.removeCategoriesFromCatalogItem} instead
     */
    deleteCatalogItemRelationshipsCategories: typeof CatalogsApi.prototype.removeCategoriesFromCatalogItem;
}
export interface CatalogsApi {
    /**
     * Alias of {@link CatalogsApi.removeItemsFromCatalogCategory}
     *
     * @deprecated Use {@link CatalogsApi.removeItemsFromCatalogCategory} instead
     */
    deleteCatalogCategoryRelationshipsItems: typeof CatalogsApi.prototype.removeItemsFromCatalogCategory;
}
export interface CatalogsApi {
    /**
     * Alias of {@link CatalogsApi.updateCategoriesForCatalogItem}
     *
     * @deprecated Use {@link CatalogsApi.updateCategoriesForCatalogItem} instead
     */
    updateCatalogItemRelationshipsCategories: typeof CatalogsApi.prototype.updateCategoriesForCatalogItem;
}
export interface CatalogsApi {
    /**
     * Alias of {@link CatalogsApi.updateItemsForCatalogCategory}
     *
     * @deprecated Use {@link CatalogsApi.updateItemsForCatalogCategory} instead
     */
    updateCatalogCategoryRelationshipsItems: typeof CatalogsApi.prototype.updateItemsForCatalogCategory;
}
