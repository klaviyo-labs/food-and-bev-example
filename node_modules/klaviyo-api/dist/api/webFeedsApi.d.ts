/**
 * Klaviyo API
 * The Klaviyo REST API. Please visit https://developers.klaviyo.com for more details.
 *
 * Contact: developers@klaviyo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { AxiosResponse } from "axios";
import { GetWebFeedResponse } from '../model/getWebFeedResponse';
import { GetWebFeedResponseCollection } from '../model/getWebFeedResponseCollection';
import { PatchWebFeedResponse } from '../model/patchWebFeedResponse';
import { PostWebFeedResponse } from '../model/postWebFeedResponse';
import { WebFeedCreateQuery } from '../model/webFeedCreateQuery';
import { WebFeedPartialUpdateQuery } from '../model/webFeedPartialUpdateQuery';
import { Session } from './apis';
export declare class WebFeedsApi {
    session: Session;
    protected _basePath: string;
    protected _defaultHeaders: any;
    protected _useQuerystring: boolean;
    constructor(session: Session);
    set useQuerystring(value: boolean);
    set basePath(basePath: string);
    set defaultHeaders(defaultHeaders: any);
    get defaultHeaders(): any;
    get basePath(): string;
    /**
     * Create a web feed.<br><br>*Rate limits*:<br>Burst: `1/s`<br>Steady: `15/m`  **Scopes:** `web-feeds:write`
     * @summary Create Web Feed
     * @param webFeedCreateQuery Create a web feed
     
     */
    createWebFeed(webFeedCreateQuery: WebFeedCreateQuery): Promise<{
        response: AxiosResponse;
        body: PostWebFeedResponse;
    }>;
    /**
     * Delete the web feed with the given ID.<br><br>*Rate limits*:<br>Burst: `1/s`<br>Steady: `15/m`  **Scopes:** `web-feeds:write`
     * @summary Delete Web Feed
     * @param id The ID of the web feed
     
     */
    deleteWebFeed(id: string): Promise<{
        response: AxiosResponse;
        body?: any;
    }>;
    /**
     * Get the web feed with the given ID.<br><br>*Rate limits*:<br>Burst: `1/s`<br>Steady: `15/m`  **Scopes:** `web-feeds:read`
     * @summary Get Web Feed
     * @param id The ID of the web feed
     * @param fieldsWebFeed For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#sparse-fieldsets
     */
    getWebFeed(id: string, options?: {
        fieldsWebFeed?: Array<'name' | 'url' | 'request_method' | 'content_type' | 'created' | 'updated' | 'status'>;
    }): Promise<{
        response: AxiosResponse;
        body: GetWebFeedResponse;
    }>;
    /**
     * Get all web feeds for an account.<br><br>*Rate limits*:<br>Burst: `1/s`<br>Steady: `15/m`  **Scopes:** `web-feeds:read`
     * @summary Get Web Feeds
     
     * @param fieldsWebFeed For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#sparse-fieldsets* @param filter For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;name&#x60;: &#x60;any&#x60;, &#x60;contains&#x60;, &#x60;equals&#x60;&lt;br&gt;&#x60;created&#x60;: &#x60;greater-or-equal&#x60;, &#x60;greater-than&#x60;, &#x60;less-or-equal&#x60;, &#x60;less-than&#x60;&lt;br&gt;&#x60;updated&#x60;: &#x60;greater-or-equal&#x60;, &#x60;greater-than&#x60;, &#x60;less-or-equal&#x60;, &#x60;less-than&#x60;* @param pageCursor For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#pagination* @param pageSize Default: 5. Min: 1. Max: 20.* @param sort For more information please visit https://developers.klaviyo.com/en/v2025-04-15/reference/api-overview#sorting
     */
    getWebFeeds(options?: {
        fieldsWebFeed?: Array<'name' | 'url' | 'request_method' | 'content_type' | 'created' | 'updated' | 'status'>;
        filter?: string;
        pageCursor?: string;
        pageSize?: number;
        sort?: 'created' | '-created' | 'name' | '-name' | 'updated' | '-updated';
    }): Promise<{
        response: AxiosResponse;
        body: GetWebFeedResponseCollection;
    }>;
    /**
     * Update the web feed with the given ID.<br><br>*Rate limits*:<br>Burst: `1/s`<br>Steady: `15/m`  **Scopes:** `web-feeds:write`
     * @summary Update Web Feed
     * @param id The ID of the web feed* @param webFeedPartialUpdateQuery Update a web feed by ID
     
     */
    updateWebFeed(id: string, webFeedPartialUpdateQuery: WebFeedPartialUpdateQuery): Promise<{
        response: AxiosResponse;
        body: PatchWebFeedResponse;
    }>;
}
