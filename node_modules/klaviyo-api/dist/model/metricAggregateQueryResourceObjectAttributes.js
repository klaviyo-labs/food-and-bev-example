"use strict";
/**
 * Klaviyo API
 * The Klaviyo REST API. Please visit https://developers.klaviyo.com for more details.
 *
 * Contact: developers@klaviyo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.MetricAggregateQueryResourceObjectAttributes = void 0;
class MetricAggregateQueryResourceObjectAttributes {
    constructor() {
        /**
        * Aggregation interval, e.g. \"hour\", \"day\", \"week\", \"month\"
        */
        this['interval'] = MetricAggregateQueryResourceObjectAttributes.IntervalEnum.Day;
        /**
        * Alter the maximum number of returned rows in a single page of aggregation results
        */
        this['pageSize'] = 500;
        /**
        * The timezone used for processing the query, e.g. `\'America/New_York\'`.             This field is validated against a list of common timezones from the [IANA Time Zone Database](https://www.iana.org/time-zones).             While most are supported, a few notable exceptions are `Factory`, `Europe/Kyiv` and `Pacific/Kanton`. This field is case-sensitive.
        */
        this['timezone'] = 'UTC';
    }
    static getAttributeTypeMap() {
        return MetricAggregateQueryResourceObjectAttributes.attributeTypeMap;
    }
}
exports.MetricAggregateQueryResourceObjectAttributes = MetricAggregateQueryResourceObjectAttributes;
MetricAggregateQueryResourceObjectAttributes.attributeTypeMap = [
    {
        "name": "metricId",
        "baseName": "metric_id",
        "type": "string"
    },
    {
        "name": "pageCursor",
        "baseName": "page_cursor",
        "type": "string"
    },
    {
        "name": "measurements",
        "baseName": "measurements",
        "type": "Array<MetricAggregateQueryResourceObjectAttributes.MeasurementsEnum>"
    },
    {
        "name": "interval",
        "baseName": "interval",
        "type": "MetricAggregateQueryResourceObjectAttributes.IntervalEnum"
    },
    {
        "name": "pageSize",
        "baseName": "page_size",
        "type": "number"
    },
    {
        "name": "by",
        "baseName": "by",
        "type": "Array<MetricAggregateQueryResourceObjectAttributes.ByEnum>"
    },
    {
        "name": "returnFields",
        "baseName": "return_fields",
        "type": "Array<string>"
    },
    {
        "name": "filter",
        "baseName": "filter",
        "type": "Array<string>"
    },
    {
        "name": "timezone",
        "baseName": "timezone",
        "type": "string"
    },
    {
        "name": "sort",
        "baseName": "sort",
        "type": "MetricAggregateQueryResourceObjectAttributes.SortEnum"
    }
];
(function (MetricAggregateQueryResourceObjectAttributes) {
    let MeasurementsEnum;
    (function (MeasurementsEnum) {
        MeasurementsEnum[MeasurementsEnum["Count"] = 'count'] = "Count";
        MeasurementsEnum[MeasurementsEnum["SumValue"] = 'sum_value'] = "SumValue";
        MeasurementsEnum[MeasurementsEnum["Unique"] = 'unique'] = "Unique";
    })(MeasurementsEnum = MetricAggregateQueryResourceObjectAttributes.MeasurementsEnum || (MetricAggregateQueryResourceObjectAttributes.MeasurementsEnum = {}));
    let IntervalEnum;
    (function (IntervalEnum) {
        IntervalEnum[IntervalEnum["Day"] = 'day'] = "Day";
        IntervalEnum[IntervalEnum["Hour"] = 'hour'] = "Hour";
        IntervalEnum[IntervalEnum["Month"] = 'month'] = "Month";
        IntervalEnum[IntervalEnum["Week"] = 'week'] = "Week";
    })(IntervalEnum = MetricAggregateQueryResourceObjectAttributes.IntervalEnum || (MetricAggregateQueryResourceObjectAttributes.IntervalEnum = {}));
    let ByEnum;
    (function (ByEnum) {
        ByEnum[ByEnum["AttributedChannel"] = '$attributed_channel'] = "AttributedChannel";
        ByEnum[ByEnum["AttributedFlow"] = '$attributed_flow'] = "AttributedFlow";
        ByEnum[ByEnum["AttributedMessage"] = '$attributed_message'] = "AttributedMessage";
        ByEnum[ByEnum["AttributedVariation"] = '$attributed_variation'] = "AttributedVariation";
        ByEnum[ByEnum["CampaignChannel"] = '$campaign_channel'] = "CampaignChannel";
        ByEnum[ByEnum["Flow"] = '$flow'] = "Flow";
        ByEnum[ByEnum["FlowChannel"] = '$flow_channel'] = "FlowChannel";
        ByEnum[ByEnum["Message"] = '$message'] = "Message";
        ByEnum[ByEnum["MessageSendCohort"] = '$message_send_cohort'] = "MessageSendCohort";
        ByEnum[ByEnum["ValueCurrency"] = '$value_currency'] = "ValueCurrency";
        ByEnum[ByEnum["Variation"] = '$variation'] = "Variation";
        ByEnum[ByEnum["VariationSendCohort"] = '$variation_send_cohort'] = "VariationSendCohort";
        ByEnum[ByEnum["BotClick"] = 'Bot Click'] = "BotClick";
        ByEnum[ByEnum["BounceType"] = 'Bounce Type'] = "BounceType";
        ByEnum[ByEnum["CampaignName"] = 'Campaign Name'] = "CampaignName";
        ByEnum[ByEnum["ClientCanonical"] = 'Client Canonical'] = "ClientCanonical";
        ByEnum[ByEnum["ClientName"] = 'Client Name'] = "ClientName";
        ByEnum[ByEnum["ClientType"] = 'Client Type'] = "ClientType";
        ByEnum[ByEnum["EmailDomain"] = 'Email Domain'] = "EmailDomain";
        ByEnum[ByEnum["FailureSource"] = 'Failure Source'] = "FailureSource";
        ByEnum[ByEnum["FailureType"] = 'Failure Type'] = "FailureType";
        ByEnum[ByEnum["FromNumber"] = 'From Number'] = "FromNumber";
        ByEnum[ByEnum["FromPhoneRegion"] = 'From Phone Region'] = "FromPhoneRegion";
        ByEnum[ByEnum["InboxProvider"] = 'Inbox Provider'] = "InboxProvider";
        ByEnum[ByEnum["List"] = 'List'] = "List";
        ByEnum[ByEnum["MessageName"] = 'Message Name'] = "MessageName";
        ByEnum[ByEnum["MessageType"] = 'Message Type'] = "MessageType";
        ByEnum[ByEnum["Method"] = 'Method'] = "Method";
        ByEnum[ByEnum["Subject"] = 'Subject'] = "Subject";
        ByEnum[ByEnum["ToNumber"] = 'To Number'] = "ToNumber";
        ByEnum[ByEnum["ToPhoneRegion"] = 'To Phone Region'] = "ToPhoneRegion";
        ByEnum[ByEnum["Url"] = 'URL'] = "Url";
        ByEnum[ByEnum["FormId"] = 'form_id'] = "FormId";
    })(ByEnum = MetricAggregateQueryResourceObjectAttributes.ByEnum || (MetricAggregateQueryResourceObjectAttributes.ByEnum = {}));
    let SortEnum;
    (function (SortEnum) {
        SortEnum[SortEnum["AttributedChannel"] = '$attributed_channel'] = "AttributedChannel";
        SortEnum[SortEnum["AttributedChannelDesc"] = '-$attributed_channel'] = "AttributedChannelDesc";
        SortEnum[SortEnum["AttributedFlow"] = '$attributed_flow'] = "AttributedFlow";
        SortEnum[SortEnum["AttributedFlowDesc"] = '-$attributed_flow'] = "AttributedFlowDesc";
        SortEnum[SortEnum["AttributedMessage"] = '$attributed_message'] = "AttributedMessage";
        SortEnum[SortEnum["AttributedMessageDesc"] = '-$attributed_message'] = "AttributedMessageDesc";
        SortEnum[SortEnum["AttributedVariation"] = '$attributed_variation'] = "AttributedVariation";
        SortEnum[SortEnum["AttributedVariationDesc"] = '-$attributed_variation'] = "AttributedVariationDesc";
        SortEnum[SortEnum["CampaignChannel"] = '$campaign_channel'] = "CampaignChannel";
        SortEnum[SortEnum["CampaignChannelDesc"] = '-$campaign_channel'] = "CampaignChannelDesc";
        SortEnum[SortEnum["Flow"] = '$flow'] = "Flow";
        SortEnum[SortEnum["FlowDesc"] = '-$flow'] = "FlowDesc";
        SortEnum[SortEnum["FlowChannel"] = '$flow_channel'] = "FlowChannel";
        SortEnum[SortEnum["FlowChannelDesc"] = '-$flow_channel'] = "FlowChannelDesc";
        SortEnum[SortEnum["Message"] = '$message'] = "Message";
        SortEnum[SortEnum["MessageDesc"] = '-$message'] = "MessageDesc";
        SortEnum[SortEnum["MessageSendCohort"] = '$message_send_cohort'] = "MessageSendCohort";
        SortEnum[SortEnum["MessageSendCohortDesc"] = '-$message_send_cohort'] = "MessageSendCohortDesc";
        SortEnum[SortEnum["ValueCurrency"] = '$value_currency'] = "ValueCurrency";
        SortEnum[SortEnum["ValueCurrencyDesc"] = '-$value_currency'] = "ValueCurrencyDesc";
        SortEnum[SortEnum["Variation"] = '$variation'] = "Variation";
        SortEnum[SortEnum["VariationDesc"] = '-$variation'] = "VariationDesc";
        SortEnum[SortEnum["VariationSendCohort"] = '$variation_send_cohort'] = "VariationSendCohort";
        SortEnum[SortEnum["VariationSendCohortDesc"] = '-$variation_send_cohort'] = "VariationSendCohortDesc";
        SortEnum[SortEnum["BotClick"] = 'Bot Click'] = "BotClick";
        SortEnum[SortEnum["BotClickDesc"] = '-Bot Click'] = "BotClickDesc";
        SortEnum[SortEnum["BounceType"] = 'Bounce Type'] = "BounceType";
        SortEnum[SortEnum["BounceTypeDesc"] = '-Bounce Type'] = "BounceTypeDesc";
        SortEnum[SortEnum["CampaignName"] = 'Campaign Name'] = "CampaignName";
        SortEnum[SortEnum["CampaignNameDesc"] = '-Campaign Name'] = "CampaignNameDesc";
        SortEnum[SortEnum["ClientCanonical"] = 'Client Canonical'] = "ClientCanonical";
        SortEnum[SortEnum["ClientCanonicalDesc"] = '-Client Canonical'] = "ClientCanonicalDesc";
        SortEnum[SortEnum["ClientName"] = 'Client Name'] = "ClientName";
        SortEnum[SortEnum["ClientNameDesc"] = '-Client Name'] = "ClientNameDesc";
        SortEnum[SortEnum["ClientType"] = 'Client Type'] = "ClientType";
        SortEnum[SortEnum["ClientTypeDesc"] = '-Client Type'] = "ClientTypeDesc";
        SortEnum[SortEnum["EmailDomain"] = 'Email Domain'] = "EmailDomain";
        SortEnum[SortEnum["EmailDomainDesc"] = '-Email Domain'] = "EmailDomainDesc";
        SortEnum[SortEnum["FailureSource"] = 'Failure Source'] = "FailureSource";
        SortEnum[SortEnum["FailureSourceDesc"] = '-Failure Source'] = "FailureSourceDesc";
        SortEnum[SortEnum["FailureType"] = 'Failure Type'] = "FailureType";
        SortEnum[SortEnum["FailureTypeDesc"] = '-Failure Type'] = "FailureTypeDesc";
        SortEnum[SortEnum["FromNumber"] = 'From Number'] = "FromNumber";
        SortEnum[SortEnum["FromNumberDesc"] = '-From Number'] = "FromNumberDesc";
        SortEnum[SortEnum["FromPhoneRegion"] = 'From Phone Region'] = "FromPhoneRegion";
        SortEnum[SortEnum["FromPhoneRegionDesc"] = '-From Phone Region'] = "FromPhoneRegionDesc";
        SortEnum[SortEnum["InboxProvider"] = 'Inbox Provider'] = "InboxProvider";
        SortEnum[SortEnum["InboxProviderDesc"] = '-Inbox Provider'] = "InboxProviderDesc";
        SortEnum[SortEnum["List"] = 'List'] = "List";
        SortEnum[SortEnum["ListDesc"] = '-List'] = "ListDesc";
        SortEnum[SortEnum["MessageName"] = 'Message Name'] = "MessageName";
        SortEnum[SortEnum["MessageNameDesc"] = '-Message Name'] = "MessageNameDesc";
        SortEnum[SortEnum["MessageType"] = 'Message Type'] = "MessageType";
        SortEnum[SortEnum["MessageTypeDesc"] = '-Message Type'] = "MessageTypeDesc";
        SortEnum[SortEnum["Method"] = 'Method'] = "Method";
        SortEnum[SortEnum["MethodDesc"] = '-Method'] = "MethodDesc";
        SortEnum[SortEnum["Subject"] = 'Subject'] = "Subject";
        SortEnum[SortEnum["SubjectDesc"] = '-Subject'] = "SubjectDesc";
        SortEnum[SortEnum["ToNumber"] = 'To Number'] = "ToNumber";
        SortEnum[SortEnum["ToNumberDesc"] = '-To Number'] = "ToNumberDesc";
        SortEnum[SortEnum["ToPhoneRegion"] = 'To Phone Region'] = "ToPhoneRegion";
        SortEnum[SortEnum["ToPhoneRegionDesc"] = '-To Phone Region'] = "ToPhoneRegionDesc";
        SortEnum[SortEnum["Url"] = 'URL'] = "Url";
        SortEnum[SortEnum["UrlDesc"] = '-URL'] = "UrlDesc";
        SortEnum[SortEnum["Count"] = 'count'] = "Count";
        SortEnum[SortEnum["CountDesc"] = '-count'] = "CountDesc";
        SortEnum[SortEnum["FormId"] = 'form_id'] = "FormId";
        SortEnum[SortEnum["FormIdDesc"] = '-form_id'] = "FormIdDesc";
        SortEnum[SortEnum["SumValue"] = 'sum_value'] = "SumValue";
        SortEnum[SortEnum["SumValueDesc"] = '-sum_value'] = "SumValueDesc";
        SortEnum[SortEnum["Unique"] = 'unique'] = "Unique";
        SortEnum[SortEnum["UniqueDesc"] = '-unique'] = "UniqueDesc";
    })(SortEnum = MetricAggregateQueryResourceObjectAttributes.SortEnum || (MetricAggregateQueryResourceObjectAttributes.SortEnum = {}));
})(MetricAggregateQueryResourceObjectAttributes = exports.MetricAggregateQueryResourceObjectAttributes || (exports.MetricAggregateQueryResourceObjectAttributes = {}));
//# sourceMappingURL=metricAggregateQueryResourceObjectAttributes.js.map